<!DOCTYPE html>
<html lang ="ko"> 
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
    content="width=device-width,initial-scale=1.0">
    <title>상세정보</title>
  <link href="/product-detail.css" rel="stylesheet">
 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

</head>

<body>


   

<main class="product-detail">
    <section class="product-main">
      <!-- 왼쪽 큰 이미지 + 썸네일 -->
      <div class="product-images">
        <img src="<%= product.thumb %>" alt="<%= product.name %>" class="primary-image"
        id="mainImage">
        <div class="thumb-list">
                <% if (product.hover_img1) { %>
          <img src="<%= product.hover_img1 %>" alt="hover1" class="hover_img">
        <% } %>
        <% if (product.hover_img2) { %>
          <img src="<%= product.hover_img2 %>" alt="hover2" class="hover_img">
        <% } %>
        </div>
      </div>

      <!-- 우측 상품 정보 -->
      <div class="product-info">
        <h2 class="product-name"><%= product.name %></h2>
        <p class="price">
  <%
    const base  = Number(product.price);
    const sale  = Number(product.sale_price);
    const isSale = !isNaN(sale) && sale > 0 && sale < base;
    const off   = isSale ? Math.max(0, Math.round((1 - (sale / base)) * 100)) : 0;
  %>

  <% if (isSale) { %>
    <span class="price-original"><%= base.toLocaleString() %>원</span>
    <span class="price-sale"><%= sale.toLocaleString() %>원</span>
    <span class="price-off"><%= off %>%</span>
  <% } else { %>
    <span class="price-normal"><%= base.toLocaleString() %>원</span>
  <% } %>
</p>
        <dl class="size-info">
          <dt>SIZE</dt>
           <% if (product.size_info) { %>
          <% product.size_info.split('\n').forEach(line => { %>
            <dd><%= line %></dd>
          <% }) %>
        <% } %>
        </dl>

        <p class="notice">구매 전 상세페이지 하단의 디테일, 체크리스트 필수 참고 부탁드립니다. :)</p>

        <div class="shipping">
          <span class="label">배송비</span>
          <div class="labelcontent">
            <p>3,000원 (70,000원 이상 구매 시 무료)</p>
            <p>제주 3,000원, 제주 외 도서 산간 5,000원 추가</p>
          </div>
         </div>

        <div class="option-select">
  <label for="color-select">Color</label>
  <select id="color-select">
    <option value="" selected disabled>선택하세요.</option>

    <% options.forEach(o => {
         const __hasSaleOpt = o.sale_price && Number(o.sale_price) < Number(o.price);
         const __finalOpt   = __hasSaleOpt ? Number(o.sale_price) : Number(o.price);
    %>
      <option
        value="<%= o.color %>"
        data-thumb ="<%= o.thumb %>"
        data-price="<%= __finalOpt %>"      
        data-oprice="<%= o.price %>"        
        data-sale="<%= o.sale_price || '' %>"
        data-stock="<%= o.stock %>"
        <%= o.stock === 0 ? 'disabled' : '' %>
      >
        <%= o.color %>
        <% if (o.stock === 0) { %>(품절)<% } else { %>(재고 <%= o.stock %>개)<% } %>
        - <%= __finalOpt.toLocaleString() %>원   
      </option>
    <% }) %>
  </select>
</div>

         <hr class="divider-top">

         <hr class="divider-option">
         
         <ul id ="cart-list" class="cart-list"></ul>
             
        <div class="order-summary">
          <div class="quantity">
             <span>주문 수량</span>
            <span class="qty-value">0개</span>
          </div>
          <div class="total-price">
            <span>총 상품 금액</span>
            <span class="total-value">0원</span>
          </div>
        </div>




       

          <form id="add-to-cart-form">
    <!-- 상품 ID -->
    <input type="hidden" name="id" value="<%= product.id %>">

    <!-- 상품명: h2에서 가져옴 -->
    <input type="hidden" name="name" value="<%= product.name %>">

    <!-- 가격은 선택된 옵션에 따라 JS에서 설정 -->
    <input type="hidden" name="price" id="hidden-price" value="<%= product.price %>">

    <!-- 수량은 기본 1로 시작, 추후 JS로 조작 가능 -->
    <input type="hidden" name="quantity" id="hidden-qty" value="0">

    <!-- 선택된 옵션 -->
    <input type="hidden" name="color" id="hidden-color" value="">
    
    <input type="hidden" name="thumb" id="hidden-thumb"  value="">

         <div class="cta-buttons">
    <button type="button" id="add-to-cart-btn" class="cart-btn">장바구니에 담기</button>

          <button class="buy-btn">구매하기</button>
          </div>

          </form>
        

        <!-- 옵션 드롭다운 바로 뒤에 고정 가로선 -->




        
      </div>
    </section>


<!-- ====== 리뷰 미리보기 START (수정본) ====== -->
<section id="reviews-section" class="rv">

<%
  // ----- 안전한 기본값 (locals 사용) -----
  const _reviews = Array.isArray(locals.reviews) ? locals.reviews : [];
  const _count   = (typeof locals.reviewCount === 'number') ? locals.reviewCount : _reviews.length;
  const _avg     = (typeof locals.avgRating === 'number')
                    ? locals.avgRating
                    : (_reviews.length ? (_reviews.reduce((s,r)=> s + (r.rating||0), 0) / _reviews.length) : 0);

  const STAR_FULL = `
    <span class="rv-star" aria-hidden="true">
      <svg viewBox="0 0 24 24"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87L18.18 22 12 18.7 5.82 22 7 14.14 2 9.27l6.91-1.01L12 2z"/></svg>
    </span>`;
  const STAR_EMPTY = `
    <span class="rv-star" aria-hidden="true">
      <svg viewBox="0 0 24 24"><path d="M22 9.27l-6.91-1.01L12 2 8.91 8.26 2 9.27l5 4.87L5.82 22 12 18.7 18.18 22 17 14.14l5-4.87z" fill="#b38b6d" opacity=".35"/></svg>
    </span>`;
  const STAR_HALF = `
    <span class="rv-star" aria-hidden="true">
      <svg viewBox="0 0 24 24">
        <defs><linearGradient id="rvHalfGrad"><stop offset="50%" stop-color="#b38b6d"/><stop offset="50%" stop-color="#eee"/></linearGradient></defs>
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87L18.18 22 12 18.7 5.82 22 7 14.14 2 9.27l6.91-1.01L12 2z" fill="url(#rvHalfGrad)"/>
      </svg>
    </span>`;

  const full  = Math.floor(_avg);
  const half  = (_avg - full >= 0.5) ? 1 : 0;
  const empty = 5 - full - half;

  const fmtDate = d => { try { return new Date(d).toISOString().slice(0,10); } catch(e){ return d || ''; } };
%>
<%
  // ... (기존 _reviews, _count, _avg, STAR_* , fmtDate 까지 그대로)

function maskId(id){
  // null/숫자/문자 모두 처리 + 공백 제거
  const raw   = (id == null) ? '' : String(id);
  const base  = raw.replace(/\s+/g, '');

  // 이미 마스킹돼 있으면 그대로
  if (/\*+$/.test(base)) return base;

  const chars = Array.from(base);         // 유니코드 안전
  const keep  = Math.min(3, chars.length);

  // 남는 길이 계산
  const rest  = chars.length - keep;

  // ★ 최소 1개 별표는 보장 (길이<=3이라도 * 하나 붙임)
  const stars = Math.max(rest, 1);

  return chars.slice(0, keep).join('') + '*'.repeat(stars);
}


%>



  <!-- 상단 요약 -->
  <div class="rv-header">
    <div class="rv-stars">
      <% for (let i=0;i<full;i++){ %><%- STAR_FULL %><% } %>
      <% if (half){ %><%- STAR_HALF %><% } %>
      <% for (let i=0;i<empty;i++){ %><%- STAR_EMPTY %><% } %>
    </div>
    <div class="rv-score"><%= _avg.toFixed(1) %></div>
    <div class="rv-meta">
      <span><%= _count %>개의 리뷰</span>
      <span class="rv-divider"></span>
      <button class="rv-view-all" id="rvOpen">전체보기</button>
    </div>
  </div>
<!-- ▼ 미리보기: 데스크탑(>=1200px)은 캐러셀, 그 이하는 2열 그리드 -->
<div class="rv-carousel" id="rvCarousel">
  <div class="rv-viewport">
    <!-- 좌/우 버튼을 'viewport' 안으로 -->
    <button class="rv-btn rv-prev" type="button" aria-label="이전">‹</button>

    <div class="rv-track">
      
       <%
         const preview = _reviews
  .filter(r => Array.isArray(r.media) && r.media.length > 0)
  .slice(0, 20);
  %>   


      <% if (!preview.length) { %>
        <div class="rv-card" style="justify-content:center;padding:24px;">
          아직 작성된 리뷰가 없습니다.
        </div>
      <% } %>

      <% preview.forEach(r => { %>
        <article class="rv-card" 
         data-rid="<%= r.id %>"
  data-images="<%= (r.media || []).join('|') %>"
  data-username="<%= r.user_mask %>"
  data-color="<%= r.color_name || '' %>"
  data-rating="<%= r.rating || 0 %>"
  data-content="<%= (r.content || '').replace(/\s+/g,' ').trim() %>"
   data-date="<%= fmtDate(r.created_at) %>"            
  data-epoch="<%= new Date(r.created_at).getTime() %>" 
     > 

          <!-- 이미지 -->
          <div class="rv-right">
            <% if (r.media && r.media.length) { const m=r.media[0]; const isVideo=/\.(mp4|webm|ogg)$/i.test(m); %>
              <div class="rv-media-wrap">
                <% if (isVideo) { %>
                  <video class="rv-media" src="<%= m %>" muted playsinline></video>
                <% } else { %>
                  <img class="rv-media" src="<%= m %>" alt="리뷰 미디어">
                <% } %>
              </div>
            <% } else { %>
              <span style="font-size:12px;color:#aaa;"></span>
            <% } %>
          </div>

          <!-- 텍스트(별점/작성자/내용) — 기존 그대로 유지 -->
          <div class="rv-left">
            <div class="rv-stars" aria-label="별점">
              <% for (let i=0;i<(r.rating||0);i++){ %><%- STAR_FULL %><% } %>
              <% for (let i=(r.rating||0);i<5;i++){ %><%- STAR_EMPTY %><% } %>
            </div>
            <div class="rv-userline">
               <span class="rv-username"><%= maskId(
  r.user_mask
  || r.user_name
  || r.nickname
  || r.name
  || (r.email && String(r.email).split('@')[0])
  || r.user_id
) %></span>
              <span class="rv-bul">•</span><span><%= fmtDate(r.created_at) %></span>
              <% if (r.color_name) { %><span class="rv-bul">•</span><span><%= r.color_name %></span><% } %>
            </div>
           
            <div class="rv-content"><%= r.content %></div>
          </div>
        </article>
      <% }) %>
    </div>

    <button class="rv-btn rv-next" type="button" aria-label="다음">›</button>
  </div>
</div>
  <!-- 모달 -->
  <div class="rv-modal-backdrop" id="rvBackdrop" aria-hidden="true"></div>
  <div class="rv-modal" id="rvModal" role="dialog" aria-modal="true" aria-labelledby="rvTitle">
    
    <div class="rv-modal-header">
      <div class="rv-sort">
  <button type="button" class="rv-sort-btn" data-sort="latest">최신순</button>
  <button type="button" class="rv-sort-btn" data-sort="rating-desc">평점↑</button>
  <button type="button" class="rv-sort-btn" data-sort="rating-asc">평점↓</button>
</div>

      <div class="rv-modal-title" id="rvTitle">전체 리뷰 (<%= _count %>)</div>
      <button class="rv-close" id="rvClose">X</button>
    </div>
    <div class="rv-modal-body">
      <div class="rv-list">
        <% _reviews.forEach(r => { 
          const hasMedia = Array.isArray(r.media) && r.media.length > 0;
        %>
     <article class="rv-item <%= hasMedia ? '' : 'no-media' %>"
           data-rid="<%= r.id %>"
           data-images="<%= (r.media || []).join('|') %>"
           data-username="<%= r.user_mask %>"
           data-color="<%= r.color_name || '' %>"
           data-rating="<%= r.rating || 0 %>"
           data-content="<%= (r.content || '').replace(/\s+/g,' ').trim() %>"
           data-date="<%= fmtDate(r.created_at) %>"
           data-epoch="<%= new Date(r.created_at).getTime() %>">
            <div class="rv-left">
              <div class="rv-stars">
                <% for (let i=0;i<(r.rating||0);i++){ %><%- STAR_FULL %><% } %>
                <% for (let i=(r.rating||0);i<5;i++){ %><%- STAR_EMPTY %><% } %>
              </div>
              <div class="rv-userline">
                  <span class="rv-username"><%= maskId(
  r.user_mask
  || r.user_name
  || r.nickname
  || r.name
  || (r.email && String(r.email).split('@')[0])
  || r.user_id
) %></span>


                <span class="rv-bul">•</span><span><%= fmtDate(r.created_at) %></span>
                <% if (r.color_name) { %><span class="rv-bul">•</span><span><%= r.color_name %></span><% } %>
              </div>
              <div class="rv-content" style="-webkit-line-clamp:unset;max-height:none;"><%= r.content %></div>
            </div>
            <div class="rv-right">
               <% if (hasMedia) {
           const m = r.media[0];
           const isVideo = /\.(mp4|webm|ogg)$/i.test(m); %>
    <div class="rv-media-wrap">
      <% if (isVideo) { %>
        <video class="rv-media" src="<%= m %>" controls playsinline></video>
      <% } else { %>
        <img class="rv-media" src="<%= m %>" alt="리뷰 미디어">
      <% } %>
    </div>
  <% } else { %>
    <span style="font-size:12px;color:#aaa;"></span>
  <% } %>
            </div>
          </article>
        <% }) %>
      </div>
    </div>
  </div>

</section>

<div id="rvQuickBg" class="rv-modal-backdrop" style="display:none;"></div>
<div id="rvQuick" class="rv-modal rv-quick" role="dialog" aria-modal="true" aria-labelledby="rvQuickTitle" style="display:none;">
  <div class="rv-modal-header">
    <div class="rv-modal-title" id="rvQuickTitle">REVIEW</div>
    <button class="rv-close" id="rvQuickClose">X</button>
  </div>

  <div class="rv-quick-body">
    <!-- 왼쪽: 큰 이미지 + 썸네일 -->
    <div class="rv-q-left">
      <div class="rv-q-main">
        <img id="rvQMain" alt="리뷰 이미지" />
      </div>
      <div class="rv-q-thumbs" id="rvQThumbs"></div>
    </div>

    <!-- 오른쪽: 정보 -->
    <div class="rv-q-right">
      <h3 class="rv-q-product"><%= product.name %></h3>
      <div class="rv-q-meta">
        <div><strong>컬러</strong> : <span id="rvQColor"></span></div>
        <div><strong>작성자</strong> : <span id="rvQUser"></span></div>
        <div><strong>날짜</strong> : <span id="rvQDate"></span></div> 
        <div class="rv-q-stars" id="rvQStars" aria-label="별점"></div>
      </div>
      <div class="rv-q-content" id="rvQText"></div>
    </div>
  </div>
</div>


<!-- ====== 리뷰 미리보기 END ====== -->
    <!-- 브랜드 스토리 (스크롤 내리면 보이는 구간) -->
    <section class="brand-story">
      <div class="storyLogo">YOLO</div>
      <h6>욜로 도자기는 흙이 지닌 자연스러움과 손으로 빚는 따뜻한 감성을 담아내고 있습니다.</h6>
      <br>
      <p>색상과 크기는 공정마다 조금씩 다르게 완성되며, 이는 수공예 도자기만의 고유한 특징입니다.</p>
      <p>(모든 제품은 랜덤으로 발송되며, 직접 보고 고르고 싶은 분들께서는 작업실에 방문해 주셔도 좋습니다.)</p>
      <p>| 구매 전 상품정보 페이지 하단의 check list / notice를 필수 확인해 주세요. |</p>
<br><br><br>



<% for (let i = 1; i <= 2; i++) { %>
  <% const title = product[`color_title${i}`]; %>
  <% const img = product[`color_img${i}`]; %>
  <% const desc = product[`color_desc${i}`]; %>
  <% if (title || img || desc) { %>
    <div class="color-block">
      <% if (title) { %><h3 class="middle"><%= title %></h3><% } %>
      <% if (img) { %><img src="<%= img %>" class="mainImg"><% } %>
      <% if (desc) { %><p class="color-desc"><%= desc %></p><% } %>
    </div>
  <% } %>
<% } %>


 <br>
    
    
    <p>모든 제품은 손으로 하나하나 빚고 가마에서 구워지는 수작업 과정을 거치기 때문에 ,</p>
    <p>다음과 같은 특징들이 있을 수 있습니다. 하단의 사진 확인 부탁드립니다.</p>

  <br><br><br>

  <br><br><br><br>
    <% if (product.description_html) { %>
      <%- product.description_html %> <!-- HTML 포함된 본문 (Libia 섹션) -->
    <% } %>
 
    

  <br><br><br><br><br><br>

  <p>유약의 특성상 색상 변화, 흐름, 맺힘 많이 나타납니다. 하단의 사진 및 설명 확인 부탁드립니다.</p>
  <!-- <img src="./nutt1.jpg" class="mainImg">-->
   <!-- <img src="./nutt2.jpg"class="mainImg">-->
    <!-- <img src="./nutt3.jpg"class="mainImg"> -->


<br><br><br><br><br><br><br>
  
<% if (product.detail_subtitle) { %>
<h6 class="middle"><%= product.detail_subtitle %></h6>
 <hr class="divider">
 <% } %>


  <% if (product.detail_img1) { %>
      <img src="<%= product.detail_img1 %>" class="mainImg">
    <% } %>

    <% if (product.detail_img2) { %>
      <img src="<%= product.detail_img2 %>" class="mainImg">
    <% } %>

    <% if (product.detail_img3) { %>
      <img src="<%= product.detail_img3 %>" class="mainImg">
    <% } %>

    <% if (product.detail_img4) { %>
      <img src="<%= product.detail_img4 %>" class="mainImg">
    <% } %>

    <% if (product.detail_img5) { %>
      <img src="<%= product.detail_img5 %>" class="mainImg">
    <% } %>

 <% if (product.detail_img6) { %>
      <img src="<%= product.detail_img6 %>" class="mainImg">
    <% } %>

    <% if (product.detail_img7) { %>
      <img src="<%= product.detail_img7 %>" class="mainImg">
    <% } %>

    <% if (product.detail_img8) { %>
      <img src="<%= product.detail_img8 %>" class="mainImg">
    <% } %>

    
    <% if (product.detail_img9) { %>
      <img src="<%= product.detail_img9 %>" class="mainImg">
    <% } %>

    
    <% if (product.detail_img10) { %>
      <img src="<%= product.detail_img10 %>" class="mainImg">
    <% } %>


    
    <% if (product.detail_img11) { %>
      <img src="<%= product.detail_img11 %>" class="mainImg">
    <% } %>


    
    <% if (product.detail_img12) { %>
      <img src="<%= product.detail_img12 %>" class="mainImg">
    <% } %>

    
    <% if (product.detail_img13) { %>
      <img src="<%= product.detail_img13 %>" class="mainImg">
    <% } %>

    
    <% if (product.detail_img14) { %>
      <img src="<%= product.detail_img14 %>" class="mainImg">
    <% } %>

    
    <% if (product.detail_img15) { %>
      <img src="<%= product.detail_img15 %>" class="mainImg">
    <% } %>

    



  <br><br><br><br>

 <div class="caution">
  <h6 class="middle">CAUTION</h6>
  <hr class="divider">
   <p>-전자레인지 및 오븐 사용은 권장하지 않습니다. 수분이나 열로 인해 제품이 파손될 수 있습니다.</P>
  <p>-금속 제품(커트러리 등)과의 충격은 제품 표면에 긁힘이나 금속 이염을 유발할 수 있습니다.</P>
  <p>-무광 유약 제품은 음식물 착색에 취약합니다. 사용 후 바로 세척해 주세요.</P>
  <p>-착색이 생겼을 경우엔 베이킹소다 등을 활용하여 부드럽게 세척하고 충분히 건조시켜 주세요.</P>
  <p>-커피,와인 등 진한 색의 음료를 오래 담을 경우에도 착색될 수 있습니다.</p>
  <p>무광 유약 제품(특히 컵 등)은 재질 특성상 *거미줄처럼 얇은 균열(빙렬)*이 생길 수 있습니다.</P>
  <p>이는 자연스러운 현상이지만, 눈에 띄지 않는 미세한 틈을 통해 차나 커피가 스며들 수 있습니다.</P>
  <p>-식기세척기 사용은 가능하나, 다른 식기와의 충돌에 주의해주세요.</P>
    <p>-세척 후에는 물기를 잘 말려 보관해 주세요. 장시간 수분이 남아 있으면 곰팡이나 냄새가 발생할 수 있습니다.</p>
 </div>

<br><br><br><br><br><br>
<div class="checklist">
  <h6 class="middle">CHECK LIST</h6>
  <hr class="divider">
<p>욜로 도자기에서는 아래와 같은 현상이 나타날 수 있습니다.</p>
<p>모든 공정이 손으로 이루어지며, 가마에서 소성되는 과정에서 생기는 자연스러운 특성으로</p>
<p>다음과 같은 특징들이 있을 수 있습니다.</p>
<p>-유약의 흐름,기포,맺힘 자국</p>
<p>-표면의 고르지 않은 질감</p>
<p>-크기의 미세한 차이</p>
<p>철분 점(흑점) 및 표면의 미세한 요철</p>
<p>-무광 유약 제품의 경우 거미줄 처럼 얇은 빙렬(균열)등</p>
<p>이러한 부분은 수공예 도자기 고유의 자연스러운 특성으로, 제품하자로</p>
<p>간주되지 않으며 이로 인한 교환 및 반품은 어려운 점 양해 부탁드립니다.</p>
</div>

<section class="product-detail-info">

  <div class="detail-item">
<img src="/size.jpg" >
<h5>크기 차이</h5><p> 수작업 특성상 제작 과정에서 제품마다 크기나 곡선에 미세한 차이가 있을 수 있습니다.</p></div>


<div class="detail-item">
<img src="/uak.jpg">
<h5>유약의 흐름 /맺힘</h5> <p> 유약이 흐르거나 맺히는 현상은 시유과정에서 자연스럽게 발생하는 것으로, 정상적인 제작 결과입니다.</p></div>



<div class="detail-item">
<img src="/gub.jpg" >
<h5>바닥 굽 유약/상처</h5>
<p> 가마에 직접 닿는 바닥면은 유약이 덜 발리거나 닿은 자국이 남을 수 있으며,
제작과정에서 미세한 찍힘이나 긁힘이 생길 수 있습니다.</p></div>


  <div class="detail-item">
<img src="/zurm.jpg" >
<h5>검은 점(철분)</h5><p> 흙에 포함된 철분이나 미세한 입자로 인해 표면에 작은 점이나 요철이 생길 수 있으며, 이는 자연 소재에서 비롯된 현상입니다.</p></div>


<div class="detail-item">
  <img src="/zipg.jpg" >
 <h5>시유 집게 자국</h5> <p> 유약을 바를 때 제품을 고정하는 집게의 접촉 부위에 자국이 남을 수 있으며, 수공 제작 과정에서 흔히 발생합니다.</p>
</div>


<div class="detail-item">
<img src="/gak4.jpg" >
<h5>욜로 각인</h5>
<p> 욜로 제품에는 "Y 각인" 이 새겨져 있으며,
유약의 발림 상태나 굽는 방식에 따라 선명도에 차이가 있을 수 있습니다.</p></div>
</section>
<br><br><br><br><br><br>

<div class="notice-section">
<h6 class="middle">NOTICE</h6>
  <hr class="divider">
  <p class="notice-title">배송안내</p>
  <p class="notice-title2">배송방법 : 택배(로젠택배)</p>
  <p class="notice-title2">배송기간 : 평균적으로 3~5일 이내에 출고 (영업일 기준)</p>
  <p class="notice-title2">배송료 : 기본 3,000원 / 7만 원 이상 무료배송 (제주 및 도서산간 지역은 3000~5000원의 추가 배송료 발생)</p>
  <p class="notice-title3">-당일출고 및 배송일 지정은 불가합니다.</p>
  <p class="notice-title3">-파손 및 오배송의 우려가 있으니 여유롭게 주문 부탁드립니다.</p>
  <p class="notice-title3">-수작업의 특성상 재고 부족, 기타 사유로 인해 배송이 지연될 경우 유선이나 문자로 연락드립니다.</p>
  <p class="notice-title">교환 및 반품 안내</p>
  <p class="notice-title2">배송 중 파손 : 수령후 24시간 이내에 사진과 함께 카카오톡 검색 ID :@yolo_2024 또는</p>
   <p class="notice-title2">  0507-1357-6521 로 연락 부탁드립니다. (네이버 교환 요청 X)</p>
  <p class="notice-title2">단순 변심으로 인한 교환/반품 : 마찬가지로 카카오톡 @yolo_2024 또는 0507-1357-6521로 연락 부탁드립니다.</p>
  <p class="notice-title3">-교환 및 반품은 처음 포장 상태 그대로 7일 이내에 발송해 주셔야 합니다.(부주의한 포장으로 파손 될 경우 환불 불가)</p>
  <p class="notice-title3">-제품 하자 및 오배송의 경우에도 수령후 7일 이내 연락 전에 대해서만 가능합니다.</p>
  <p class="notice-title3">-단순 변심으로 인한 교환/반품은 왕복 택배비를 부담하셔야 합니다. (최초 배송비 포함 총 6,000원)</p>
  <p class="notice-title3">-사전 연락 없이 상품을 반품하시면 교환 및 환불 처리가 되지 않고 고객님께 착불로 반송됩니다.</p>
  <p class="notice-title">교환 및 반품이 불가한 경우</p>
  <p class="notice-title2">-수작업 제품의 특성상 발생하는 특징(상품페이지 하단의 CHECK LIST에 명시한 사유)에 해당하는 경우에는 </p>
  <p class="notice-title2">무상 교환 및 반품이 어렵습니다.</p>
  <p class="notice-title3">-상품에 사용 흔적이 있거나 고객님의 부주의로 상품 가치가 허락한 경우에는 교환 및 반품이 어렵습니다.</p>
  <p class="notice-title">고객센터</p>
  <p class="notice-title3">카카오톡 검색용 ID: @yolo_2024</p>
  <p class="notice-title3">홈페이지 QNA 게시판</p>
  <p class="notice-title3">-상담시간 10:00 ~ 22:00</p>
 <p class="notice-title3"> -전화상담도 진행하고 있습니다.</p>
 </div>


    </section>
  </main>



  

<section class="color-info-section">
  <h5>COLOR INFORMATION</h5>
  <hr class="divider">
  <table class="color-info-table">
    <thead>
      <tr>
        <th>색상명</th>
        <th>광도</th>
        <th>착색<br>(커피, 음식 등)</th>
        <th>스크래처<br>(칼, 스테인리스 숟가락 마찰)</th>
        <th>식기세척기<br>(온도 조절사항 확인)</th>
        <th>오븐/전자레인지/직화</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Candy Pink</td>
        <td>(반)무광 (Semi-Matte)</td>
        <td>○</td>
        <td>○</td>
        <td>○</td>
        <td>X</td>
      </tr>
      <tr>
        <td>Girasol Yellow</td>
        <td>(반)무광 (Semi-Matte)</td>
        <td>○</td>
        <td>○</td>
        <td>○</td>
        <td>X</td>
      </tr>
      <tr>
        <td>Summit White</td>
        <td>(반)무광 (Semi-Matte)</td>
        <td>○</td>
        <td>○</td>
        <td>○</td>
        <td>X</td>
      </tr>
      <tr>
        
    </tbody>
  </table>
  <div class="color-info-note">
  <p>○ = 착색 스크래치 있음, 식세기 가능 / ✕ = 착색 없음, 오븐 직화 불가, 전자레인지 추천하지 않음</p><br>
  <p>-(반)무광(Semi-Matte)은 무광과 반무광의 중간 광도의 부드러운 질감을 지닌 유약입니다. 착색, 마모, 스크래치가 되시지 않음은 각 유약 제품의 표면특성에 따라 차이가 있을 수 있습니다.</p>
  <p>-식기세척기 사용 가능합니다. 사용 시 충돌에 주의해 주세요.</p>
</div>
</section>









<br><br><br>
<br><br><br> 

   
</main>


 <header class="header">

     <div class="header-icons">
      
       <i class="fa-solid fa-search" id="mobileSearchIcon" style="cursor:pointer;"></i>
       
      <div id="mobileSearchOverlay" class="search-overlay">
       <input  type="text"
        class="search-input-overlay"
        id="searchInputOverlay"
        placeholder="검색" />
        <button id="searchCloseBtn" class="search-close-btn">X</button>
        </div>

      <span id="logintoggle2"></span>
      
      <a href="/cart"> <i class="fa-solid fa-cart-shopping"></i></a>
     </div>



      <button class ="menu-toggle"onclick="toggleMenu()" >☰</button>
      <button class="close-toggle hidden" onclick="toggleMenu()">X</button>
     <!--close-toggle과 hidden의 두 클래스를 사용 가능-->
        <nav class="mobile-menu" id="navMenu"> 
          
          <div class="top">
          <li> <a class="logo-mobile" href="/">YOLO</a></li>
          <div id="logintoggle">
            <li> <a class="login-mobile" href="/login">Log In</a></li>
          </div>
             </div>
          <div class="search-m">
             <input type="text" id="search-mobile" placeholder="⌕">
          </div>

           


          <ul class="menuM"> <!--메뉴 항목들(가로 메뉴, 드롭다운 등을 감싸는 태그)-->
          <li class="dropMobile">  <!--드롭다운 메뉴-->
            <a  class=dropheader href="#">ABOUT
              <span class="arrow">&#709;</span>
            </a> <!--드롭다운 메뉴 제목-->
            <ul class="submenu">  <!--서브 메뉴--> 
              <li><a  href ="/about-as">About us</a></li>
              <li><a  href ="/store">Store</a></li>
              <li><a  href ="/contact">Contact us</a></li>
              </ul>
              </li>
           
             <li> <a  href="/notice">NOTICE</a> </li>
               <!-- 단일 메뉴-->

        <li class="dropMobile">  <!--드롭다운 메뉴--> <!-- <li>는 리스트 항목 하나.-->
        <a class=dropheader href="#">SHOP
          <span class="arrow">&#709;</span>
        </a> <!--드롭다운 메뉴 제목-->
        <ul class="submenu"> <!--서브메뉴-->
         <li><a  href ="/shop-all">ALL</a></li>
          <li><a  href ="/shop/plate">접시</a></li>
          <li><a   href ="/shop/bowl">볼</a></li>
          <li><a   href ="/shop/cup">컵</a></li>
          <li><a   href ="/shop/N">기타 제품</a></li>
        
         </ul>
        </li>

        <li class="dropMobile">  <!-- 드롭다운 메뉴 항목을 만듬.-->
        <a class=dropheader href="#">FAQ/QNA
          <span class="arrow">&#709;</span>
        </a><!-- 드롭다운 제목-->
        <ul class="submenu"><!--하위 메뉴들을 감싸는 리스트.-->
          <li><a href ="/question">자주 묻는 질문</a></li>
          <li><a href ="/QNA">Q&A</a></li><!--하위 메뉴 항목-->
        </ul>
        </li>
        </ul>







         </nav>
         
<div class="logo" style="cursor: pointer;"> 
        <a href="/">  YOLO
     </a></div>
       
      <nav class="nav-center">
      <ul class="menu"> <!--메뉴 항목들(가로 메뉴, 드롭다운 등을 감싸는 태그)-->
          <li class="dropdown">  <!--드롭다운 메뉴-->
            <a class="about" href="#">ABOUT</a> <!--드롭다운 메뉴 제목-->
            <ul class="dropdown-menu">  <!--서브 메뉴--> 
              <li><a  class="about" href ="/about-as">About us</a></li>
              <li><a  class="about" href ="/store">Store</a></li>
              <li><a  class="about" href ="/contact">Contact us</a></li>
              </ul>
              </li>
           
             <li> <a class="about" href="/notice">NOTICE</a> </li>
               <!-- 단일 메뉴-->

        <li class="dropdown">  <!--드롭다운 메뉴--> <!-- <li>는 리스트 항목 하나.-->
        <a class="about" href="#">SHOP</a> <!--드롭다운 메뉴 제목-->
        <ul class="dropdown-menu"> <!--서브메뉴-->
          <li><a  class="about" href ="/shop-all">ALL</a></li>
          <li><a  class="about" href ="/shop/plate">접시</a></li>
          <li><a  class="about" href ="/shop/bowl">볼</a></li>
          <li><a  class="about" href ="/shop/cup">컵</a></li>
          <li><a  class="about" href ="/shop/N">기타 제품</a></li>

         </ul>
        </li>

        <li class="dropdown">  <!-- 드롭다운 메뉴 항목을 만듬.-->
        <a class="about" href="#">FAQ/QNA</a><!-- 드롭다운 제목-->
        <ul class="dropdown-menu"><!--하위 메뉴들을 감싸는 리스트.-->
          <li><a  class="about" href ="/question">자주 묻는 질문</a></li>
          <li><a  class="about" href ="/QNA">Q&A</a></li><!--하위 메뉴 항목-->
        </ul>
        </li>
        </ul>
      </nav>

         <div class="nav-right">
         <!--로그인,장바구니-->
           <button type="button" id="searchToggle" class="search-btn" onclick="toggleSearch(event)">
            ⌕  </button>
<input  type="text"
        class="search-input"
        id="searchInput"
        placeholder=" " />
            <!-- 토글로 나타날 검색 입력창 -->

       
           <div id="login-menu">
  <a class="auth" href="/login">Login</a>
</div>

<% if (!user) { %>
  <!-- 로그인 안 했을 때만 Join 보이기 -->
  <a class="auth join-link" href="/signup">Join</a>
<% } %>

<a class="auth" href="/cart">Cart</a>

        </div>
          
     <!--메뉴 토글 버튼(햄버거메뉴) / 모바일 등 좁은 화면에서 메뉴를 열고 닫을때 사용됨.-->
     <!--oncilick버튼 클릭 시 자바스크립트 함수 toggleMenu()실행-->
      </ul>
        </header>





 <span class="insta">
          <a href="https://instagram.com/yol_o.0?igsh=MWd0OHlya3ZwcW5vbw=="
         target="_blank">
         <img src="/insta.png" alt="instagram"
         style="width: 25px; height: 25px;"></a>
          </span>
        </a>

         <section class="footer">
          <span class="final">
            <a href="/policy" style="text-decoration: none; color:inherit;">
            이용약관</a>&nbsp;  
            
             <a href="/privacy" style="text-decoration: none; color:inherit;">
            개인정보처리방침</a>&nbsp; 
            
            <!-- ✅ 사업자정보 확인 팝업 링크 -->
    <a href="https://www.ftc.go.kr/bizCommPop.do?wrkr_no=7023001816"
    onclick="window.open(this.href, 'bizInfo', 'width=800,height=700'); return false;"
    style="text-decoration: none; color: inherit;">사업자정보확인</a>&nbsp;
          </span>
          <br>
          <br>
          <span class="final2">
            상호: 욜로도예공방 | 대표: 정윤재 | 개인정보관리책임자: 정윤재 | 전화: 0507-1357-6521 | 이메일: yolo_2024@naver.com
          </span>
          <div class="final2">
            주소: 서울 강동구 천중로 53길 21 지하 1층 무궁화 놀이터 맞은편 건물 | 사업자등록번호:  702-30-01816 | 통신판매:  | 호스팅제공자: (주)가비아
          </div>
          <br>
          <br>
          <div class="final2">
            Copyright 2024. YOLO All rights reserved.
          </div>
          <br>
          <br>
           
        </div>
         </section>
          
<script>

    document.addEventListener("DOMContentLoaded", function(){
        const mainImage = document.getElementById("mainImage");

       const hover_img = document.querySelectorAll(".hover_img");

        hover_img.forEach(hover_img => {

          hover_img.addEventListener("click",function(){
            const newSrc= this.getAttribute("src");

            mainImage.setAttribute("src",newSrc);
          });
        });
     });
  



    document.querySelectorAll('.dropheader').forEach(header => { header.addEventListener('click' ,
      () => {
         const parent = header.parentElement;

         parent.classList.toggle('open');
      });
    });

 function toggleMenu() {
     const nav = document.getElementById('navMenu');
     const openBtn = document.querySelector('.menu-toggle');
     const closeBtn = document.querySelector('.close-toggle');
     const icons= document.querySelector('.header-icons');

     
    
     nav.classList.toggle('active');
    
     const isOpen =nav.classList.contains('active');
   

if(isOpen) {
     openBtn.classList.add('hidden');
     closeBtn.classList.remove('hidden');
     icons.classList.add('hidden'); // toggle시 오른쪽 상단메뉴 제거

   document.body.classList.add('no-scroll');
     document.documentElement.classList.add('no-scroll');
    }
     //html 태그도 막기
     else{
 openBtn.classList.remove('hidden');
 closeBtn.classList.add('hidden');
   icons.classList.remove('hidden'); // toggle시 오른쪽 상단메뉴 삽입
    document.body.classList.remove('no-scroll');
    document.documentElement.classList.remove('no-scroll');
     // 토글 나갈시 다시 세로 스크롤 생김
  }

 }



 function toggleSearch(event) {
 
     if(event)event.preventDefault();  //submit 동작을 방지



   const input = document.querySelector('.search-input');
    const authLinks = document.querySelectorAll('.auth');
    // querySelectorAll()은  NodeList(배열 비슷한 객체)를 반환하니까 ,
    // classList.toggle()은 직접 쓸 수 없음 
    // forEach 나 for문으로 (반복문으로) 처리해야 함. 
 

  input.classList.toggle('active'); 
  input.focus(); // 돋보기를 누르면 커서 깜빡임
      
     authLinks.forEach(el => {
           
      el.classList.toggle('hidden'); //각각에 hidden 토글 적용

     });

 }

 
/* ✅ 두 번째로 선언해 버렸던 toggleSearch() 삭제 후 아래 하나만 남깁니다 */
function toggleSearch(e){
  if(e) e.preventDefault();          // form submit 방지

  const input      = document.getElementById('searchInput');
  const authLinks  = document.querySelectorAll('.auth');

  // 입력창 열고/닫기
  input.classList.toggle('show');

  // Login / Cart 토글
  authLinks.forEach(a => a.classList.toggle('hidden'));

  if (input.classList.contains('show')) {
    input.focus();
  } else {
    input.value = '';                // 닫힐 때 내용 비우기(선택)
  }
}

/* Enter 키로 검색 페이지 이동 */
document.getElementById('searchInput').addEventListener('keydown', e => {
  if (e.key === 'Enter'){
    const keyword = e.target.value.trim();
    if (!keyword){
      alert('검색어를 입력하세요');
      return;
    }
    location.href = `/search?keyword=${encodeURIComponent(keyword)}`;
  }
});

document.getElementById('mobileSearchIcon').addEventListener('click', e => {
  const overlay = document.getElementById('mobileSearchOverlay');
  overlay.classList.add('active');
  document.getElementById('searchInputOverlay').focus();
});

document.getElementById('searchInputOverlay').addEventListener('keydown', e => {
  if (e.key === 'Enter') {
    const keyword = e.target.value.trim();
    if (!keyword) {
      alert('검색어를 입력하세요');
      return;
    }
    location.href = `/search?keyword=${encodeURIComponent(keyword)}`;
  }
});


// 모바일 메뉴 검색창: Enter로 검색 페이지 이동
document.getElementById('search-mobile').addEventListener('keydown', e => {
  if (e.key === 'Enter') {
    const keyword = e.target.value.trim();
    if (!keyword) {
      alert('검색어를 입력하세요');
      return;
    }
    location.href = `/search?keyword=${encodeURIComponent(keyword)}`;
  }
});





document.getElementById('searchCloseBtn').addEventListener('click', () => {
  const overlay = document.getElementById('mobileSearchOverlay');
  overlay.classList.remove('active'); // 또는 .classList.remove('active') → 네 CSS 기준에 맞춰
  document.getElementById('searchInputOverlay').value = '';
});







/* =========== 초기 데이터 =========== */
const cart = {};                        // { color: { qty, price } }
const productName =                     // “리비아 M (2type)_Nutty” 자동 읽기
  document.querySelector('.product-name').textContent.trim();

/* =========== DOM =========== */
const colorSelect  = document.getElementById('color-select');
const cartList = document.getElementById('cart-list');
const qtyEl   = document.querySelector('.qty-value');
const totalEl  = document.querySelector('.total-value');
const hiddenQty =document.getElementById('hidden-qty');
const hiddenColor =document.getElementById('hidden-color');
const hiddenPrice =document.getElementById('hidden-price');
const hiddenThumb =document.getElementById('hidden-thumb');

/* =========== 옵션 선택 =========== */

colorSelect.addEventListener('change', () => {
  const opt = colorSelect.options[colorSelect.selectedIndex];
  const color = opt.value;
  if (!color) return;
  

  const price = Number(opt.dataset.price);
  const thumb = opt.dataset.thumb || '';
  
 const stock = parseInt(opt.dataset.stock, 10);
  if (stock === 0) {
    alert('선택하신 옵션은 품절입니다.');
    return;
  }
  // ...이후 로직 그대로 유지
  // 이미 cart에 있으면 수량만 증가
  if (cart[color]) {
    cart[color].qty++;
    updateRow(color);
  } else {
    // cart에 새로 추가
    cart[color] = { qty: 1, price, thumb };
    addRow(color);
  }

  // 숨겨진 input도 갱신
  hiddenColor.value = color;
  hiddenPrice.value = price;
  hiddenQty.value = cart[color].qty;
  hiddenThumb.value = thumb;

  updateSummary(); // ✅ 이게 cart 전체 기준으로 합계 다시 계산함
});

/*colorSelect.addEventListener('change', () => {
  const opt   = colorSelect.options[colorSelect.selectedIndex];
  const color = opt.value;
  if (!color) return;

  const price = Number(opt.dataset.price);

  if (cart[color]) {         // 이미 담긴 색상이면 수량 +1
    cart[color].qty++;
    updateRow(color);
  } else {                   // 새 색상
    cart[color] = { qty:1, price };
    addRow(color);
  }
  updateSummary();
}); */


/* ============ 행 추가 ============ */
function addRow(color){
  const li = document.createElement('li');
  li.className = 'cart-row';
  li.dataset.color = color;
  li.innerHTML = `
    <!-- ① 윗줄 : 제목 · X-->
    <div class="row-head">
      <span class="row-title">${productName} (${color})</span>
      
    </div>

    <!-- ② 아랫줄 : 수량 · 가격 -->
    <div class="row-body">
      <div class="qty-box">
        <button class="minus">-</button>
        <span class="qty">1</span>
        <button class="plus">+</button>
      </div>
      <span class="row-price">${format(cart[color].price)}원</span>
                                      <button class="remove">×</button>
    

      
    </div>
  `;
  // 가로선이 없는 경우에만 추가
if (!document.querySelector('.cart-divider')) {
  const hr = document.createElement('hr');
  hr.className = 'cart-divider';

  const orderSummary = document.querySelector('.order-summary');
  orderSummary.parentNode.insertBefore(hr, orderSummary); // 주문수량 위에 삽입
}
  cartList.appendChild(li);

}



/* =========== 버튼(±/×) 이벤트 위임 =========== */
  cartList.addEventListener('click', e=>{
  const li    = e.target.closest('.cart-row');
  if(!li) return;
  const color = li.dataset.color;

  if(e.target.classList.contains('plus')){
    cart[color].qty++; updateRow(color);

    if(color === colorSelect.value)
    hiddenQty.value = cart[color].qty;
 }
  if(e.target.classList.contains('minus') && cart[color].qty > 1) {
    cart[color].qty--; updateRow(color);

    if(color === colorSelect.value) 
    hiddenQty.value = cart[color].qty;
  }
  if(e.target.classList.contains('remove')){
    delete cart[color];
    /* li 와 뒤 HR 둘 다 제거 */
    const hr = li.nextElementSibling;
    li.remove(); hr && hr.tagName==='HR' && hr.remove();

   if(color === colorSelect.value) {
     hiddenQty.value = 1;
   }
  }
  updateSummary();
});  


  const format = n => n.toLocaleString();
/* =========== 행 업데이트 =========== */
function updateRow(color){
  const li = cartList.querySelector(`[data-color="${color}"]`);
  li.querySelector('.qty').textContent = cart[color].qty;
  li.querySelector('.row-price').textContent =
    format(cart[color].price * cart[color].qty)+'원';
}

/* =========== 합계 업데이트 =========== */
function updateSummary(){
  const qty   = Object.values(cart).reduce((s,v)=>s+v.qty,0);
  const total = Object.values(cart).reduce((s,v)=>s+v.qty*v.price,0);
  qtyEl.textContent   = qty+'개';
  totalEl.textContent = format(total)+'원';
}

/* =========== 숫자 3-자리 콤마 =========== */

   /* ---- ① 숨겨진 input 최신화 ---- */
  function updateCartValues () {
   
    const opt   = colorSelect.options[colorSelect.selectedIndex];
    if (!opt) return;

    hiddenColor.value = opt.value;
    hiddenPrice.value = opt.dataset.price;
    hiddenThumb.value = opt.dataset.thumb || '';
    /* 수량 ↓ 현재 선택된 색상의 카트 수량이 있으면 가져오고 없으면 1 */
    const qty        = cart[opt.value]?.qty || 1;
    hiddenQty.value = qty;
  }

  /* ▶ 장바구니 담기 버튼 클릭 → AJAX */
/* ②: handleAdd() 를 ‘cart 전부 전송’ 방식으로 교체 ---------- */
async function handleAdd () {
  /* 1) select 가 방금 바뀐 상태라면 hidden 값 갱신 */
  updateCartValues();

 const items = Object.entries(cart).map(([color, v]) => {
  const rawId = document.querySelector('[name="id"]').value;
  const id = parseInt(rawId, 10);

  if (Number.isNaN(id)) {
    console.warn('❌ 숫자가 아닌 ID 감지됨:', rawId);
  }

  return {
    id,  // 이제 숫자
    name: document.querySelector('[name="name"]').value,
    price: v.price,
    quantity: v.qty,
    color,
    thumb: document.querySelector(
      `#color-select option[value="${color}"]`
    )?.dataset.thumb || ''
  };
});


  if (items.length === 0) {
    alert('담긴 상품이 없습니다!');
    return;
  }

  /* 3) AJAX 한 번에 전송  */
  try {
    const res = await fetch('/cart/add', {
      method : 'POST',
      headers: { 'Content-Type': 'application/json' },
      body   : JSON.stringify(items)          // ← 배열!
    });

    if (!res.ok) {
      alert('장바구니 담기 실패');
      return;
    }
    window.location.href = '/cart';           // 성공 → 이동
  } catch (err) {
    console.error(err);
    alert('서버 통신 오류');
  }
}
document.getElementById('add-to-cart-btn').addEventListener('click',handleAdd);

/*document.getElementById('color-select').addEventListener('change', function (e) {
  const opt = e.target.selectedOptions[0];
  const price = parseInt(opt.dataset.price || 0);
  document.querySelector('.total-value').textContent = price.toLocaleString() + '원';
});*/



//로그인유지

    fetch('/auth/status')
    .then(res => res.json())
    .then(data => {
      console.log('auth/status 응답:',data);
      const banner = document.querySelector('#login-menu');
      if (!banner) return;
     console.warn('배너가 없음');
      if (data.loggedIn) {
        banner.innerHTML = `
      
          <a href="/mypage"class="auth">My page</a>

        `;
      }
    });


    fetch('/auth/status')
    .then(res => res.json())
    .then(data => {
      console.log('auth/status 응답:',data);
      const banner = document.querySelector('#logintoggle');
      if (!banner) return;
     console.warn('배너가 없음');
      if (data.loggedIn) {
        banner.innerHTML = `
    
          <a href="/mypage"class="login-mobile">My page</a>
        `;
      }
    });


    
   fetch('/auth/status')
    .then(res => res.json())
    .then(data => {
      console.log('auth/status 응답:',data);
      const banner = document.querySelector('#logintoggle2');
      if (!banner) return;
     console.warn('배너가 없음');
      if (data.loggedIn) {
        banner.innerHTML = `
    
          <a href="/mypage"class="fa-solid fa-user"></a>
        `;
      }
    else{
      banner.innerHTML=` <a href="/login"class="fa-solid fa-user"></a>`;
    }

    });
document.querySelector('.buy-btn').addEventListener('click', async e => {
  e.preventDefault();

  const colorSelect = document.getElementById('color-select');
  const selectedOption = colorSelect.options[colorSelect.selectedIndex];
  const color = selectedOption.value;

  if (!color && Object.keys(cart).length === 0) {
    alert('옵션을 선택하세요.');
    return;
  }

  try {
    // 로그인 여부 확인
    const res = await fetch('/auth/status');
    const { loggedIn } = await res.json();

    if (!loggedIn) {
      alert('로그인이 필요합니다.');
      return location.href = '/login';
    }

    // cart 객체 기반으로 서버에 저장
    const items = Object.entries(cart).map(([color, v]) => {
      const rawId = document.querySelector('[name="id"]').value;
      const id = parseInt(rawId, 10);
      return {
        id,
        name: document.querySelector('[name="name"]').value,
        price: v.price,
        quantity: v.qty,
        color,
        thumb: document.querySelector(
          `#color-select option[value="${color}"]`
        )?.dataset.thumb || ''
      };
    });

    if (items.length === 0) {
      alert('담긴 상품이 없습니다!');
      return;
    }

    // 서버로 저장
    const saveRes = await fetch('/cart/add', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(items)
    });

    if (!saveRes.ok) {
      alert('상품 저장 실패');
      return;
    }

    location.href = '/purchase';
  } catch (err) {
    console.error('구매 처리 오류:', err);
    alert('서버 오류가 발생했습니다.');
  }
});

    (function(){
      const open=document.getElementById('rvOpen');
      const modal=document.getElementById('rvModal');
      const close=document.getElementById('rvClose');
      const backdrop=document.getElementById('rvBackdrop');
      function show(){modal.style.display='block';backdrop.style.display='block';document.body.style.overflow='hidden'}
      function hide(){modal.style.display='none';backdrop.style.display='none';document.body.style.overflow=''}
      open&&open.addEventListener('click',show);
      [close,backdrop].forEach(el=>el&&el.addEventListener('click',hide));
      document.addEventListener('keydown',e=>{if(e.key==='Escape')hide()});
    })();


(function(){
  const root = document.getElementById('rvCarousel');
  if(!root) return;

  const viewport = root.querySelector('.rv-viewport');
  const track    = root.querySelector('.rv-track');
  const cards    = Array.from(track.children);
  const prevBtn  = root.querySelector('.rv-prev');
  const nextBtn  = root.querySelector('.rv-next');

  const mq = window.matchMedia('(min-width:1200px)'); // 데스크탑만 캐러셀
  const GAP = 16;
  let perView = 3;   // 한 화면에 3장
  let index = 0;

  function layoutDesktop(){
    const vw = viewport.clientWidth;
    const itemW = (vw - GAP * (perView - 1)) / perView;
    cards.forEach(el => el.style.width = itemW + 'px');
    go(index);
  }

  function clearMobile(){
    track.style.transform = '';
    cards.forEach(el => el.style.width = '');
    prevBtn.disabled = true;
    nextBtn.disabled = false;
  }

  function maxIndex(){ return Math.max(0, cards.length - perView); }

  function go(i){
    const max = maxIndex();
    index = Math.max(0, Math.min(i, max));
    const w = cards[0]?.offsetWidth || 0;
    const offset = index * (w + GAP);
    track.style.transform = `translateX(${-offset}px)`;
    prevBtn.disabled = index === 0;
    nextBtn.disabled = index === max;
  }

  function applyMode(){
    if (mq.matches){
      prevBtn.style.display = '';
      nextBtn.style.display = '';
      layoutDesktop();
    } else {
      prevBtn.style.display = 'none';
      nextBtn.style.display = 'none';
      clearMobile();
    }
  }
(function(){
  const list = document.querySelector('#rvModal .rv-list');
  if(!list) return;
  const btns = document.querySelectorAll('#rvModal .rv-sort-btn');

  function sortList(mode){
    const items = Array.from(list.children);
    items.sort((a,b)=>{
      const ra = Number(a.dataset.rating||0);
      const rb = Number(b.dataset.rating||0);
      const ta = Number(a.dataset.epoch||0);
      const tb = Number(b.dataset.epoch||0);
      if(mode==='rating-desc'){ if(rb!==ra) return rb-ra; return tb-ta; } // 평점 높은순, 동점은 최신
      if(mode==='rating-asc'){  if(ra!==rb) return ra-rb; return tb-ta; } // 평점 낮은순, 동점은 최신
      /* default: 최신순 */
      return tb - ta;
    });
    items.forEach(el=>list.appendChild(el)); // 재배치
  }

  function activate(btn){
    btns.forEach(b=>b.classList.toggle('is-active', b===btn));
  }

  btns.forEach(btn=>{
    btn.addEventListener('click', ()=>{
      const mode = btn.dataset.sort;
      activate(btn);
      sortList(mode);
    });
  });

  // 최초 진입은 최신순
  const first = document.querySelector('#rvModal .rv-sort-btn[data-sort="latest"]');
  if(first){ first.classList.add('is-active'); sortList('latest'); }
})();






  prevBtn.addEventListener('click', () => go(index - 1));
  nextBtn.addEventListener('click', () => go(index + 1));
  window.addEventListener('resize', () => mq.matches && layoutDesktop());
  mq.addEventListener ? mq.addEventListener('change', applyMode)
                      : mq.addListener(applyMode);

  applyMode();
})();



(function(){
  // 별 SVG (사이트와 동일 톤)
  const STAR_FULL = '<svg viewBox="0 0 24 24" width="20" height="20"><path fill="#b38b6d" d="M12 2l3.09 6.26L22 9.27l-5 4.87L18.18 22 12 18.7 5.82 22 7 14.14 2 9.27l6.91-1.01L12 2z"/></svg>';
  const STAR_EMPTY= '<svg viewBox="0 0 24 24" width="20" height="20"><path fill="#b38b6d" opacity=".35" d="M22 9.27l-6.91-1.01L12 2 8.91 8.26 2 9.27l5 4.87L5.82 22 12 18.7 18.18 22 17 14.14l5-4.87z"/></svg>';

  const bg     = document.getElementById('rvQuickBg');
  const modal  = document.getElementById('rvQuick');
  const close  = document.getElementById('rvQuickClose');
  const main   = document.getElementById('rvQMain');
  const thumbs = document.getElementById('rvQThumbs');
  const elUser = document.getElementById('rvQUser');
  const elColor= document.getElementById('rvQColor');
  const elStars= document.getElementById('rvQStars');
  const elText = document.getElementById('rvQText');
  const elDate = document.getElementById('rvQDate');  // ★ 추가
  if(!modal) return;

  function renderStars(n){
    const rating = Math.max(0, Math.min(5, Number(n)||0));
    let html = '';
    for(let i=0;i<rating;i++) html += STAR_FULL;
    for(let i=rating;i<5;i++) html += STAR_EMPTY;
    return html;
  }

  function openQuick(data){
    const images = (data.images || '').split('|').filter(Boolean);
    // 메인 이미지
    main.src = images[0] || '';
    // 썸네일
    thumbs.innerHTML = images.map((src,i)=>(
      `<button type="button" class="rv-q-thumb${i===0?' is-active':''}" data-index="${i}">
         <img src="${src}" alt="썸네일 ${i+1}">
       </button>`
    )).join('');

    // 정보 채우기
    elUser.textContent  = data.username || '';
    elColor.textContent = data.color || '';
    elStars.innerHTML   = renderStars(data.rating);
    elText.textContent  = data.content || '';
   elDate.textContent = data.date || '';               
    // 이벤트(썸네일)
    thumbs.querySelectorAll('.rv-q-thumb').forEach(btn=>{
      btn.addEventListener('click', ()=>{
        thumbs.querySelectorAll('.rv-q-thumb').forEach(b=>b.classList.remove('is-active'));
        btn.classList.add('is-active');
        const idx = Number(btn.dataset.index)||0;
        main.src = images[idx] || '';
      });
    });

    // 열기
    modal.style.display = 'block';
    bg.style.display    = 'block';
  }

  function closeQuick(){
    modal.style.display = 'none';
    bg.style.display    = 'none';
  }

  close.addEventListener('click', closeQuick);
  bg.addEventListener('click', closeQuick);
  document.addEventListener('keydown', (e)=>{ if(e.key==='Escape') closeQuick(); });

  // 카드/아이템 클릭 바인딩 (미리보기 + 전체보기 목록)
  const selector = '#reviews-section .rv-card, #reviews-section .rv-item';
  document.querySelectorAll(selector).forEach(card=>{
    card.style.cursor='pointer';
    card.addEventListener('click', (e)=>{
      // 내부 링크/버튼 클릭 제외하고 싶으면 아래 주석 해제
      // if (e.target.closest('a,button')) return;
      const d = card.dataset;
      openQuick({
        images:   d.images || '',
        username: d.username || '',
        color:    d.color || '',
        rating:   d.rating || 0,
        content:  d.content || '',
        date:     d.date || ''         
      });
    });
  });
})();



(function(){
  const select      = document.getElementById('color-select');
  const qtyEl       = document.querySelector('.qty-value');
  const totalEl     = document.querySelector('.total-value');

  const hidPrice    = document.getElementById('hidden-price');
  const hidColor    = document.getElementById('hidden-color');
  const hidThumb    = document.getElementById('hidden-thumb');
  const hidQty      = document.getElementById('hidden-qty');

  function won(n){ return Number(n || 0).toLocaleString() + '원'; }
  function recalc(){
    const price = Number(hidPrice.value || 0);
    const qty   = Number(hidQty.value   || 1);
    if (totalEl) totalEl.textContent = won(price * qty);
    if (qtyEl)   qtyEl.textContent   = qty + '개';
  }

  if (select){
    select.addEventListener('change', () => {
      const opt = select.options[select.selectedIndex];
      hidPrice.value = opt.dataset.price || '0';     // ✅ 세일가(없으면 정가)
      hidColor.value = opt.value || '';
      hidThumb.value = opt.dataset.thumb || '';
      recalc();
    });
  }

  // 최초 렌더 시 합계 표시 한 번 맞춰두기
  recalc();
})();




</script>

<style>

.logo a{
  color: black !important;
  text-decoration: none !important;
  font-size: 30px !important;
}

  @media (max-width:768px) {
.logo a{
  color: black !important;
  text-decoration: none !important;
  font-size: 30px !important;
}
.header{
  padding:0.3rem 2rem;
}
.bg-img{
  padding-top:0;
}
.final{
   font-size: 9px;
   text-align: center;
   margin-top: 15px;

}
.final2{
    font-size: 9px;
    text-align: center;
   
    
}

.row-price{
  display: none;
}

.detail-item p{
 text-align: left;
}
  }

 .rv{margin:48px 0;font-family:inherit}.rv *{box-sizing:border-box}
    .rv a,.rv button{all:unset;cursor:pointer}
    .rv-header{display:flex;align-items:center;gap:16px}
    .rv-stars{display:flex;align-items:center;gap:8px}
    .rv-star{width:28px;height:28px}
    .rv-star svg{width:100%;height:100%;fill:#b38b6d}
    .rv-score{font-size:32px;font-weight:700;line-height:1}
    .rv-meta{color:#666;font-size:14px;display:flex;gap:12px;align-items:center}
    .rv-divider{width:1px;height:14px;background:#ddd}
    .rv-view-all{padding:6px 10px;border:1px solid #ddd;font-size:13px}
    .rv-grid{margin-top:20px;display:grid;grid-template-columns:repeat(4,1fr);gap:16px}
    .rv-card{border:1px solid #eee;overflow:hidden;background:#fff;display:flex}
    .rv-card .rv-left{flex:1 1 60%;padding:14px;display:flex;flex-direction:column;gap:8px}
    .rv-card .rv-right{flex:1 1 40%;background:#faf9f7;display:flex;align-items:center;justify-content:center; aspect-ratio: 1 / 1 !important; overflow: hidden; }
    .rv-userline{display:flex;flex-wrap:wrap;gap:8px;font-size:13px;color:#666}
    .rv-username{font-weight:600;color:#333}.rv-bul{color:#bbb}
    .rv-content{font-size:14px;color:#333;line-height:1.5;display:-webkit-box;-webkit-line-clamp:4;-webkit-box-orient:vertical;overflow:hidden}
    .rv-media{width:100%;height:100%;object-fit:cover;display:block; image-orientation: from-image;}.rv-media-wrap{width:100%;height:100%}
    .rv-modal-backdrop{position:fixed;inset:0;background:rgba(0,0,0,.45);display:none;z-index:999}
    .rv-modal{position:fixed;inset:40px 16px;background:#fff;display:none;z-index:1000;overflow:hidden;box-shadow:0 20px 60px rgba(0,0,0,.25)}
    .rv-modal-header{padding:14px 16px;border-bottom:1px solid #eee;display:flex;justify-content:space-between;align-items:center}
    .rv-modal-title{font-weight:700;font-size:16px}
    .rv-close{padding:6px 10px;border:1px solid #ddd;font-size:13px}
    .rv-modal-body{padding:16px;height:calc(100% - 54px);overflow:auto}
    .rv-list{display:grid;grid-template-columns:repeat(2,1fr);gap:16px}
    .rv-item{border:1px solid #eee;overflow:hidden;background:#fff;display:grid;grid-template-columns:1.4fr 1fr}
    .rv-item .rv-left{padding:14px;display:flex;flex-direction:column;gap:8px}
    .rv-item .rv-right{background:#faf9f7;display:flex;align-items:center;justify-content:center;aspect-ratio: 4 / 3; overflow: hidden;  min-height:140px}
    @media (max-width:1024px){.rv-grid{grid-template-columns:repeat(3,1fr)}}
    @media (max-width:768px){.rv-header{flex-direction:column;align-items:flex-start;gap:10px}.rv-score{font-size:28px}.rv-grid{grid-template-columns:repeat(2,1fr)}.rv-item{grid-template-columns:1fr}}
    @media (max-width:480px){.rv-grid{grid-template-columns:1fr}}
  

/* ====== 모바일~노트북: 이미지 위, 텍스트 아래 카드 2장 가로 스크롤 ====== */
@media (max-width: 1200px){
  /* 카드들을 가로로 배치(캐러셀 느낌), 2장씩 꽉 차게 */
  .rv-grid{
    display: grid !important;
    grid-auto-flow: column !important;
    grid-auto-columns: calc(50% - 12px) !important; /* 2장 보이도록 */
    gap: 16px !important;
    overflow-x: auto !important;
    scroll-snap-type: x mandatory !important;
    padding: 4px 2px 10px !important;
  }
  .rv-grid::-webkit-scrollbar{ height: 6px; }
  .rv-grid::-webkit-scrollbar-thumb{ background: #ddd;  }

  /* 카드 구조: 이미지 위 / 내용 아래 */
  .rv-card{
    display: flex !important;
    flex-direction: column !important;
    min-width: 0 !important;
    border: 1px solid #e9e9e9 !important;
   
    background: #fff !important;
    overflow: hidden !important;
    scroll-snap-align: start !important;
  }

  /* 이미지 영역: 가로 100%, 4:3 비율(원하면 1/1로 변경 가능) */
  .rv-card .rv-right{
    order: 0 !important;
    width: 100% !important;
    height: auto !important;
    aspect-ratio: 4 / 3 !important;   /* <- 1 / 1 로 바꾸면 정사각 */
    background: #faf9f7 !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    overflow: hidden !important;
    border-bottom: 1px solid #f0f0f0 !important;
  }

  /* 텍스트 영역 */
  .rv-card .rv-left{
    order: 1 !important;
    padding: 12px 14px !important;
  }

  /* 미디어 채우기 */
  .rv-media-wrap{ width:100% !important; height:100% !important; }
  .rv-media{
    width:100% !important; height:100% !important;
    object-fit: cover !important;
    display:block !important;
    image-orientation: from-image !important;
  }
}






/* ===== 리뷰 레이아웃 최종 덮어쓰기 ===== */

/* 공통: 그리드 기본값 */
.rv-grid{
  display: grid !important;
  gap: 16px !important;
  overflow: visible !important;       /* 가로 스크롤/캐러셀 제거 */
  grid-auto-flow: row !important;     /* 세로 흐름 고정 */
  padding: 0 !important;
}

/* 데스크탑/노트북: 3열 */
@media (min-width: 1200px){
  .rv-grid{ grid-template-columns: repeat(3, minmax(0, 1fr)) !important; }
}

/* 모바일~태블릿: 2열 */
@media (max-width: 1199px){
  .rv-grid{ grid-template-columns: repeat(2, minmax(0, 1fr)) !important; }
}



/* 카드: 이미지 위 / 텍스트 아래(모든 구간 동일) */
.rv-card{
  display: flex !important;
  flex-direction: column !important;
  border: 1px solid #e9e9e9 !important;

  background: #fff !important;
  overflow: hidden !important;
  min-width: 0 !important;
}

/* 이미지 영역: 가로 100% + 4:3 비율 고정 */
.rv-card .rv-right{
  order: 0 !important;
  width: 100% !important;
  height: auto !important;
  aspect-ratio: 4 / 3 !important;     /* 정사각 원하면 1/1 */
  background:#faf9f7 !important;
  display:flex !important; align-items:center !important; justify-content:center !important;
  overflow:hidden !important;
}

/* 텍스트 영역 */
.rv-card .rv-left{
  order: 1 !important;
  padding: 12px 14px !important;
}

/* 미디어 채우기 (비율 유지) */
.rv-media-wrap{ width:100% !important; height:100% !important; }
.rv-media{
  width:100% !important; height:100% !important;
  object-fit: cover !important;
  display:block !important;
  image-orientation: from-image !important;
}

@media (max-width: 768px){
  .rv-grid{
    grid-template-columns: repeat(2, minmax(0, 1fr)) !important; /* 2열 고정 */
    gap: 16px !important;
  }

  .rv-card{
    display: flex !important;
    flex-direction: column !important;
    border: 1px solid #e9e9e9 !important;
    background: #fff !important;
    overflow: hidden !important;
  }

  .rv-card .rv-right{
    width: 100% !important;
    aspect-ratio: 4 / 3 !important; /* 원하는 비율 */
    flex: 0 0 auto !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    background: #faf9f7 !important;
    overflow: hidden !important;
  }

  .rv-card .rv-left{
    flex: 1 1 auto !important;
    padding: 12px 14px !important;
  }

  .rv-media-wrap{ width: 100% !important; height: 100% !important; }
  .rv-media{
    width: 100% !important;
    height: 100% !important;
    object-fit: cover !important;
    display: block !important;
  }
}

/* 버튼 */
.rv-carousel{ position:relative; }
.rv-btn{
  position:absolute; top:50%; transform:translateY(-50%);
  width:36px; height:36px; border:1px solid #ddd; border-radius:50%;
  background:#fff; display:flex; align-items:center; justify-content:center;
  cursor:pointer; box-shadow:0 2px 8px rgba(0,0,0,.08);
}
.rv-prev{ left:-12px; }
.rv-next{ right:-12px; }
.rv-btn:disabled{ opacity:.4; cursor:default; }

/* 모바일/태블릿: 2열 그리드, 버튼 숨김, 4개만 표시 */
@media (max-width:1199px){
  .rv-btn{ display:none; }
  .rv-viewport{ overflow:visible; }
  .rv-track{
    display:grid; gap:16px;
    grid-template-columns:repeat(2, minmax(0,1fr));
  }
  .rv-card:nth-child(n+5){ display:none; } /* 5번부터 숨김 */
}

/* 데스크탑: 3장 캐러셀 */
@media (min-width:1200px){
  .rv-viewport{ overflow:hidden; }
  .rv-track{ display:flex; gap:16px; transition:transform .35s ease; }
  .rv-card{ flex:0 0 auto; } /* 너비는 JS에서 계산 */
}

/* (이미 쓰고있는) 이미지 비율 유지 */
.rv-right{ aspect-ratio:4/3; overflow:hidden; display:flex; align-items:center; justify-content:center; background:#faf9f7; }
.rv-media-wrap{ width:100%; height:100%; }
.rv-media{ width:100%; height:100%; object-fit:cover; display:block; }


/* 공통: 미디어 비율 */
#rvCarousel .rv-right{
  aspect-ratio:4/3 !important;
  background:#faf9f7 !important;
  display:flex !important; align-items:center !important; justify-content:center !important;
  overflow:hidden !important;
}
#rvCarousel .rv-media-wrap{width:100% !important;height:100% !important;}
#rvCarousel .rv-media{width:100% !important;height:100% !important;object-fit:cover !important;display:block !important;}

/* 데스크탑(>=1200px): 3장 캐러셀 */
@media (min-width:1200px){
  #rvCarousel .rv-viewport{position:relative !important; overflow:hidden !important;}
  #rvCarousel .rv-track{display:flex !important; gap:16px !important; transition:transform .35s ease !important;}
  #rvCarousel .rv-card{flex:0 0 auto !important; display:flex !important;} /* 가로 레이아웃 유지 */

  /* 좌/우 버튼 (all:unset 무력화) */
  #rvCarousel .rv-btn{
    all:revert !important;            /* ← 핵심: 기존 all:unset 무력화 */
    position:absolute !important; top:50% !important; transform:translateY(-50%) !important;
    width:56px !important; height:56px !important; font-size:30px !important; line-height:1 !important;
    background:#fff !important; border:1px solid #dcdcdc !important; border-radius:50% !important;
    display:flex !important; align-items:center !important; justify-content:center !important;
    box-shadow:0 6px 16px rgba(0,0,0,.12) !important; z-index:10 !important; cursor:pointer !important;
  }
  #rvCarousel .rv-prev{left:8px !important;}
  #rvCarousel .rv-next{right:8px !important;}
  #rvCarousel .rv-btn:disabled{opacity:.35 !important; cursor:default !important;}
}

/* 모바일/태블릿(<1200px): 2열, 버튼 숨김, 4개까지만 노출 */
@media (max-width:1199px){
  #rvCarousel .rv-viewport{overflow:visible !important;}
  #rvCarousel .rv-track{
    display:grid !important; gap:16px !important;
    grid-template-columns:repeat(2, minmax(0,1fr)) !important;
  }
  #rvCarousel .rv-btn{display:none !important;}
  #rvCarousel .rv-card:nth-child(n+5){display:none !important;}
}
/* 1) 헤더(총별점) ↔ 리뷰영역 간격 늘리기 */
#reviews-section .rv-header{ margin-bottom: 16px !important; }
#rvCarousel{ margin-top: 15px !important; }         /* 캐러셀 자체 여백 */

/* 2) 카드 컴팩트 모드 (여백/글자 줄이기) */
#rvCarousel .rv-left{ padding: 8px 10px !important; gap: 6px !important; }
#rvCarousel .rv-userline{ font-size: 12px !important; gap: 6px !important; }
#rvCarousel .rv-content{
  font-size: 13px !important;
  -webkit-line-clamp: 3 !important;   /* 내용 줄 수 3줄로 */
}

/* 3) 썸네일 세로 길이 줄이기(카드 전체가 낮아짐) */
@media (min-width:1200px){             /* 데스크탑 캐러셀 */
  #rvCarousel .rv-right{ aspect-ratio: 1 / 1 !important; }  /* 4:3 → 정사각 */
}
@media (max-width:1199px){             /* 모바일/태블릿 2열 */
  #rvCarousel .rv-right{ aspect-ratio: 1 / 1 !important; }
}

/* 4) 별 아이콘/숫자 살짝 축소 */
#reviews-section .rv-star{ width: 22px !important; height: 22px !important; }
#reviews-section .rv-score{ font-size: 28px !important; }

/* 5) (선택) 리뷰 제목 숨기기  ─ EJS에 rv-title 클래스만 달아주세요 */
#rvCarousel .rv-title{ display:none !important; }



/* ==== 리뷰 텍스트 왼쪽 정렬 강제 (상위 중앙정렬 영향 차단) ==== */
#reviews-section .rv-left,
#reviews-section .rv-userline,
#reviews-section .rv-content{
  text-align: left !important;
  align-items: flex-start !important;   /* rv-left가 flex라면 정렬도 왼쪽 */
  justify-content: flex-start !important;
}



/* ==== 리뷰 카드 높이 강제 축소 (데스크톱만) ==== */
@media (min-width:1200px){
  /* 텍스트 박스 높이 제한 */
  #rvCarousel .rv-left{
    max-height: 120px !important;   /* 카드 아래 영역을 딱 줄임 */
    overflow: hidden !important;
  }

}
















/* 퀵뷰 전용 레이아웃 */
.rv-quick .rv-quick-body{
  padding:16px;
}
.rv-quick .rv-quick-body,
.rv-quick .rv-q-left,
.rv-quick .rv-q-right{ box-sizing: border-box; }

.rv-quick .rv-quick-body{
  display:grid; grid-template-columns: 1.2fr 1fr; gap:20px;
  height: calc(100% - 54px); overflow:auto;
}
.rv-q-main{
  width:100%; aspect-ratio: 1/1; background:#faf9f7;
  display:flex; align-items:center; justify-content:center; overflow:hidden;
  border:1px solid #eee;
}
.rv-q-main img{ width:100%; height:100%; object-fit:cover; display:block; }

.rv-q-thumbs{
  margin-top:10px; display:flex; gap:8px; flex-wrap:wrap;
}
.rv-q-thumb{
  border:1px solid #ddd; padding:0; width:58px; height:58px; border-radius:6px; overflow:hidden;
}
.rv-q-thumb.is-active{ outline:2px solid #b38b6d; }
.rv-q-thumb img{ width:100%; height:100%; object-fit:cover; display:block; }

.rv-q-product{ font-size:16px; margin:0 0 8px; }
.rv-q-meta{ font-size:14px; display:grid; gap:6px; margin-bottom:10px; }
.rv-q-stars{ display:flex; gap:4px; align-items:center; }
.rv-q-content{ font-size:14px; line-height:1.6; white-space:pre-wrap; }

/* 반응형 */
@media (max-width: 900px){
  .rv-quick .rv-quick-body{ grid-template-columns: 1fr; }
}

/* 퀵뷰 모달을 더 작게, 가운데 정렬 + 헤더 위로 올라오게 */
#rvQuickBg{ z-index: 5000 !important; }
#rvQuick{
  z-index: 5001 !important;

  /* 전체 화면 inset을 쓰지 말고 작게 가운데 배치 */
  position: fixed !important;
  inset: auto !important;
  top: 50% !important;
  left: 50% !important;
  transform: translate(-50%, -50%) !important;

  width: min(820px, 92vw) !important;   /* ← 팝업 가로폭 축소 */
  max-height: 85vh !important;          /* ← 팝업 높이 제한 */
  border-radius: 12px !important;
  overflow: hidden !important;
}

/* 내부 그리드도 좀 더 컴팩트하게 */
#rvQuick .rv-quick-body{
  display: grid !important;
  grid-template-columns: 1.05fr 0.95fr !important;
  gap: 16px !important;
  padding: 16px !important;
  height: calc(100% - 54px) !important;
  overflow: auto !important;
}

/* 닫기 버튼/헤더가 위에서 가려지지 않게 */
#rvQuick .rv-modal-header{
  position: sticky !important;
  top: 0 !important;
  z-index: 1 !important;
  background: #fff !important;
}


/* 메인 이미지 박스 크기 축소 (정사각, 최대 높이 제한) */
#rvQuick .rv-q-main{
  aspect-ratio: 1 / 1 !important;
  max-height: 360px !important;      /* ← 이미지가 너무 커지지 않도록 */
  border: 1px solid #eee !important;
  background: #faf9f7 !important;
}

/* 이미지 객체 맞춤 */
#rvQuick #rvQMain{
  width: 100% !important;
  height: 100% !important;
  object-fit: cover !important;
  display: block !important;
}

/* 썸네일을 가운데 정렬 + 가로로 줄맞춤 */
#rvQuick .rv-q-thumbs{
  margin-top: 10px !important;
  display: flex !important;
  flex-wrap: wrap !important;
  gap: 8px !important;
  justify-content: center !important;   /* ← 가운데 정렬 */
}

#rvQuick .rv-q-thumb{
  width: 54px !important;
  height: 54px !important;
  border: 1px solid #ddd !important;
  border-radius: 6px !important;
  overflow: hidden !important;
  padding: 0 !important;
}

#rvQuick .rv-q-thumb.is-active{
  outline: 2px solid #b38b6d !important;
}

#rvQuick .rv-q-thumb img{
  width: 100% !important;
  height: 100% !important;
  object-fit: cover !important;
  display: block !important;
}
#rvQuick .rv-q-right{
  display: flex !important;
  flex-direction: column !important;
  align-items: flex-start !important;   /* ← 왼쪽 정렬 */
  text-align: left !important;
}

#rvQuick .rv-q-product{ margin: 0 0 8px !important; font-size: 16px !important; }
#rvQuick .rv-q-meta{ display: grid !important; gap: 6px !important; margin-bottom: 10px !important; font-size: 14px !important; }
#rvQuick .rv-q-stars{ display: flex !important; gap: 4px !important; align-items: center !important; }
#rvQuick .rv-q-content{ font-size: 14px !important; line-height: 1.6 !important; white-space: pre-wrap !important; }
@media (max-width: 900px){
  #rvQuick{ width: 92vw !important; max-height: 86vh !important; }
  #rvQuick .rv-quick-body{ grid-template-columns: 1fr !important; }
  #rvQuick .rv-q-main{ max-height: 56vw !important; } /* 화면 비율에 맞춰 더 작게 */
}









/* ===== 전체보기 모달을 작은 중앙 팝업으로 ===== */
#rvModal{                         /* 큰 전체 화면 inset 제거하고 퀵뷰처럼 */
  position: fixed !important;
  inset: auto !important;
  top: 50% !important; left: 50% !important;
  transform: translate(-50%, -50%) !important;
  width: min(860px, 92vw) !important;   /* 팝업 가로폭 축소 */
  max-height: 86vh !important;          /* 세로 제한 + 내부 스크롤 */
  overflow: hidden !important;
  border-radius: 12px !important;
  z-index: 4800 !important;
}
#rvBackdrop{ z-index: 4790 !important; }
#rvModal .rv-modal-header{
  position: sticky !important; top:0 !important; background:#fff !important; z-index:1 !important;
}
#rvModal .rv-modal-body{ height: calc(100% - 54px) !important; overflow:auto !important; }

/* 1열 스크롤 + 좌이미지/우텍스트(컴팩트) */
#rvModal .rv-list{
  display: grid !important;
  grid-template-columns: 1fr !important;   /* ★ 1열 */
  gap: 14px !important;
}
#rvModal .rv-item{
  display: grid !important;
  grid-template-columns: 220px 1fr !important;   /* 좌 220px 이미지, 우 텍스트 */
  gap: 12px !important;
  border: 1px solid #eee !important;
  padding: 10px !important;
}
#rvModal .rv-item .rv-right{
  aspect-ratio: 1 / 1 !important;
  max-height: 220px !important;
  background:#faf9f7 !important;
  display:flex !important; align-items:center !important; justify-content:center !important;
  overflow:hidden !important;
}
#rvModal .rv-item .rv-left{ padding: 6px 4px !important; }
#rvModal .rv-item .rv-media-wrap{ width:100% !important; height:100% !important; }
#rvModal .rv-item .rv-media{ width:100% !important; height:100% !important; object-fit:cover !important; display:block !important; }
#rvModal .rv-item .rv-star{ width: 18px !important; height: 18px !important; }

/* 좁은 화면에서는 세로 스택 */
@media (max-width: 600px){
  #rvModal .rv-item{ grid-template-columns: 1fr !important; }
  #rvModal .rv-item .rv-right{ max-height: 52vw !important; }
}



#rvModal .rv-sort{ display:flex; gap:8px; }
#rvModal .rv-sort-btn{
  padding:4px 8px; border:1px solid #ddd; border-radius:6px; font-size:12px; cursor:pointer;
}
#rvModal .rv-sort-btn.is-active{ border-color:#b38b6d; color:#b38b6d; font-weight:600; }






/* === 전체보기 모달: 내부 스크롤 유지 (이전 답변 그대로) === */
#rvModal{
  /* 기본은 숨김(초기 진입시 안 보임) */
  display: none;                                  /* ← 기본 숨김 */
  position: fixed !important;
  inset: auto !important;
  top: 50% !important; left: 50% !important;
  transform: translate(-50%, -50%) !important;
  width: min(860px, 92vw) !important;
  max-height: 86vh !important;
  overflow: hidden !important;
  border-radius: 12px !important;
  z-index: 4800 !important;
}

/* JS가 기존처럼 `style.display='block'`으로 열면,
   자동으로 flex 레이아웃 적용 (레이아웃 변화 없음) */
#rvModal[style*="display: block"],
#rvModal[style*="display:block"]{
  display: flex !important;
  flex-direction: column !important;
}

/* (기존 그대로 유지) 헤더 고정 + 바디 스크롤 */
#rvModal .rv-modal-header{ position: sticky !important; top:0 !important; background:#fff !important; z-index:1 !important; }
#rvModal .rv-modal-body{ flex:1 1 auto !important; min-height:0 !important; overflow:auto !important; height:auto !important; }

/* === 리스트 1열 + 아이템 2컬럼(텍스트|이미지) === */
#rvModal .rv-list{
  display: grid !important;
  grid-template-columns: 1fr !important;   /* 1열 목록 */
  gap: 12px !important;
}

#rvModal .rv-item{
  display: grid !important;
  grid-template-columns: 1fr 260px !important;  /* 왼쪽: 텍스트(유동), 오른쪽: 사진 260px */
  align-items: start !important;
  gap: 14px !important;
  border: 1px solid #eee !important;
  padding: 12px !important;
}

/* 왼쪽 텍스트: 여백 줄이고 전체 내용 보이게 */
#rvModal .rv-item .rv-left{ padding: 0 !important; }
#rvModal .rv-item .rv-stars{ margin-bottom: 6px !important; }
#rvModal .rv-item .rv-userline{ margin: 4px 0 8px !important; }
#rvModal .rv-item .rv-content{
  -webkit-line-clamp: unset !important;
  max-height: none !important;
  white-space: pre-wrap !important;
  line-height: 1.6 !important;
  font-size: 14px !important;
}

/* 오른쪽 사진: 고정폭 컬럼 안에서 정사각(또는 4:3)으로 딱 맞춤 */
#rvModal .rv-item .rv-right{
  padding: 0 !important;
  background: transparent !important;
}
#rvModal .rv-item .rv-media-wrap{
  width: 100% !important;
  aspect-ratio: 1 / 1 !important;           /* 정사각. 4/3 원하면 4 / 3 로 */
  background: #faf9f7 !important;
  border: 1px solid #eee !important;
  overflow: hidden !important;
}
#rvModal .rv-item .rv-media{
  width: 100% !important;
  height: 100% !important;
  object-fit: cover !important;
  display: block !important;
}

/* 모바일에선 세로 스택 */
@media (max-width: 600px){
  #rvModal .rv-item{ grid-template-columns: 1fr !important; }
  #rvModal .rv-item .rv-media-wrap{ max-height: 52vw !important; }
}





/* 모달 공통 – 내부가 반드시 스크롤되도록 */
#rvModal, #rvQuick{
  display: none;                 /* 기본 숨김(이미 적용돼 있죠) */
  max-height: 86svh !important;  /* 모바일 주소창 대응: svh/dvh 사용 */
  overflow: hidden !important;
}

#rvModal .rv-modal-body,
#rvQuick .rv-quick-body{
  flex: 1 1 auto !important;
  min-height: 0 !important;                /* ★ 내부 스크롤 활성의 핵심 */
  overflow: auto !important;               /* ★ 세로 스크롤 */
  -webkit-overflow-scrolling: touch !important;  /* iOS 부드러운 스크롤 */
  overscroll-behavior: contain !important; /* 배경 스크롤 방지 */
}


@media (max-width: 900px){
  #rvModal, #rvQuick{
    width: 94vw !important;
    max-height: 90svh !important;   /* 화면 높이 안전치 */
  }

  /* 이미지 영역이 너무 커서 잘리는 것 방지 */
  #rvQuick .rv-q-main{
    max-height: 52svh !important;
  }
  #rvModal .rv-item .rv-media-wrap{
    max-height: 52svh !important;
  }

  /* 퀵뷰는 1열 스택 유지 */
  #rvQuick .rv-quick-body{ grid-template-columns: 1fr !important; }
}



/* ===== 첨부 없는 리뷰: 전체보기 모달에서 레이아웃 축소 ===== */
/* 우측 이미지 컬럼 자체를 제거하고, 1열로 전환 */
#rvModal .rv-item.no-media {
  grid-template-columns: 1fr !important;   /* 텍스트만 1열 */
}

/* 우측 비어있는 박스 숨김 */
#rvModal .rv-item.no-media .rv-right {
  display: none !important;
}

/* (선택) no-media일 때 좌측 텍스트 여백만 살짝 조정하고 싶다면 */
#rvModal .rv-item.no-media .rv-left {
  padding-right: 0 !important;
}



#rvQuick .rv-quick-body {
  overflow-y: auto !important;
  -webkit-overflow-scrolling: touch !important;
  max-height: 80vh !important;   /* 내용 많을 때만 스크롤 */

}


/* === 모바일 전용: 퀵뷰 부모 높이 '명시'해서 내부 스크롤 끝까지 보이게 === */
@media (max-width: 900px){
  /* 이미 max-height: 90svh 를 쓰고 있으니, height도 동일하게 '명시' */
  #rvQuick{
    height: 90svh !important;      /* ← % 계산용 기준 높이 제공 */
  }

  /* 본문 스크롤 영역 (기존 디자인 그대로) */
  #rvQuick .rv-quick-body{
    height: calc(100% - 54px) !important;   /* 헤더(닫기줄) 높이만큼 뺌 */
    min-height: 0 !important;
    overflow-y: auto !important;
    -webkit-overflow-scrolling: touch !important;
    /* 하단 안전영역 보정(아이폰 홈바) */
    padding-bottom: max(env(safe-area-inset-bottom), 12px) !important;
    box-sizing: border-box !important;
  }
}

/* === 모바일 초협폭(≤420px)에서도 2열 유지 + 깔끔한 3줄 말줄임 === */
@media (max-width: 420px){

  /* 2열은 그대로 */
  .rv-grid{
    grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
    gap: 12px !important;               /* 너무 좁아지는 것만 살짝 완화 */
  }
  #rvCarousel .rv-track{
    display: grid !important;
    grid-template-columns: repeat(2, minmax(0, 1fr)) !important;
    gap: 12px !important;
  }

  /* 텍스트 3줄 말줄임: 반줄 잘림 방지 */
  #rvCarousel .rv-content{
    display: -webkit-box !important;
    -webkit-box-orient: vertical !important;
    -webkit-line-clamp: 3 !important;   /* 정확히 3줄 */
    overflow: hidden !important;
    text-overflow: ellipsis !important;
    white-space: normal !important;

    line-height: 1.5 !important;        
    /* 소수점 반올림으로 마지막 글자 잘리는 것 방지: +2px 여유 */
    max-height: calc(3 * 1.5em + 2px) !important;
    padding-bottom: 2px !important;    

    /* 공백 없는 연속 문자(!!!, 이모지 등)도 줄바꿈 가능하게 */
    overflow-wrap: anywhere !important;
    word-break: break-word !important;
  }

  /* 상자 자체가 잘라먹지 않게 */
  #rvCarousel .rv-left{ overflow: visible !important; padding: 8px 10px !important; }
}





.product-detail .price .price-original{
  display:block;
  color:#9aa0a6;
  text-decoration: line-through;
  font-size:.92em;
  margin-bottom:2px;
}
.product-detail .price .price-sale{
  font-weight:600;
  color:#222;
}
.product-detail .price .price-off{
  margin-left:6px;
  font-weight:700;
  color:#c62828;
}
.product-detail .price .price-normal{
  font-weight:600;
  color:#222;
}




  /* 헤더의 Join 링크에만 말풍선 표시 */
.header .nav-right .join-link{
  position: relative;          /* 말풍선 기준점 */
}

/* 말풍선 바디 */
.header .nav-right .join-link::after{
  content: "+1,000P";
  position: absolute;
  left: 50%;
  top: calc(100% + 6px);       /* 링크 아래로 6px 떨어뜨림 */
  transform: translateX(-50%);
  background: gray;        /* 말풍선 색 */
  color: #fff;
  font-size: 11px;
  font-weight: 600;
  line-height: 1;
  padding: 6px 10px;
  border-radius: 12px;
  white-space: nowrap;         /* 줄바꿈 방지 */
  pointer-events: none;        /* 클릭은 링크에만 */
}

/* 말풍선 꼬리 */
.header .nav-right .join-link::before{
  content: "";
  position: absolute;
  left: 50%;
  top: 100%;
  transform: translateX(-50%);
  border-width: 6px 6px 0 6px;           /* 삼각형 */
  border-style: solid;
  border-color: #5f6c85 transparent transparent transparent;
}

/* (선택) 모바일에선 숨기고 싶으면 */
@media (max-width: 768px){
  .header .nav-right .join-link::before,
  .header .nav-right .join-link::after{
    display: none;
  }
}


.nav-center{
  margin-left: 50px;
}

</style>




</body>
</html>

