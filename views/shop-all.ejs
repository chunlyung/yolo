<!DOCTYPE html>
<html lang ="ko"> 
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
    content="width=device-width,initial-scale=1.0">
    <title>상품 목록</title>
  <link href="./shop-all.css" rel="stylesheet">
 <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

</head>

<body>


  <p class="head">
    All
  </p>
<main class="product-container">

    <% products.forEach(p => {%>
  <div class="product-card">
   <div class="img-wrapper" style="--pos-x:50%; --pos-y:35%;"> <!-- ← 호버때 쓰던 위치값 -->
  <a href="/product/<%= p.id %>" class="product-link">
    <img src="<%= p.thumb %>" alt="<%= p.name %>" class="default-img">
    <% if (p.hover_img_list && p.hover_img_list.trim()) { %>
      <img src="<%= p.hover_img_list.trim() %>" alt="hover image" class="hover-img">
    <% } %>
  </a>
</div>

    <div class="product-info">
    <p class="product-title"><%= p.name %>(<%= p.color %>)</p>
   <span class="product-price">
  <%
    const base  = Number(p.price);
    const sale  = Number(p.sale_price);
    const isSale = sale && sale < base;
    const off = isSale ? Math.max(0, Math.round((1 - (sale / base)) * 100)) : 0;
  %>

  <% if (isSale) { %>
    <span class="price-original"><%= base.toLocaleString() %>원</span>
    <span class="price-sale"><%= sale.toLocaleString() %>원</span>
    <span class="price-off"><%= off %>%</span>
  <% } else { %>
    <span class="price-normal"><%= base.toLocaleString() %>원</span>
  <% } %>
</span>

  </div>

  </div>
  
<% }) %>
</main>


   

 
   
    <br><br><br><br><br><br><br><br><br><br>


 <header class="header">

     <div class="header-icons">
      
       <i class="fa-solid fa-search" id="mobileSearchIcon" style="cursor:pointer;"></i>
       
      <div id="mobileSearchOverlay" class="search-overlay">
       <input  type="text"
        class="search-input-overlay"
        id="searchInputOverlay"
        placeholder="검색" />
        <button id="searchCloseBtn" class="search-close-btn">X</button>
        </div>

      <span id="logintoggle2"></span>
      
      <a href="cart"> <i class="fa-solid fa-cart-shopping"></i></a>
     </div>




      <button class ="menu-toggle"onclick="toggleMenu()" >☰</button>
      <button class="close-toggle hidden" onclick="toggleMenu()">X</button>
     <!--close-toggle과 hidden의 두 클래스를 사용 가능-->
        <nav class="mobile-menu" id="navMenu"> 
          
               <div class="top">
          <li> <a class="logo-mobile" href="/">YOLO</a></li>
          <div id="logintoggle">
            <li> <a class="login-mobile" href="/login">Log In</a></li>
          </div>
             </div>
          <div class="search-m">
             <input type="text" id="search-mobile" placeholder="⌕">
          </div>

           


          <ul class="menuM"> <!--메뉴 항목들(가로 메뉴, 드롭다운 등을 감싸는 태그)-->
          <li class="dropMobile">  <!--드롭다운 메뉴-->
            <a  class=dropheader href="#">ABOUT
              <span class="arrow">&#709;</span>
            </a> <!--드롭다운 메뉴 제목-->
            <ul class="submenu">  <!--서브 메뉴--> 
              <li><a  href ="/about-as">About us</a></li>
              <li><a  href ="/store">Store</a></li>
              <li><a  href ="/contact">Contact us</a></li>
              </ul>
              </li>
           
             <li> <a  href="/notice">NOTICE</a> </li>
               <!-- 단일 메뉴-->

        <li class="dropMobile">  <!--드롭다운 메뉴--> <!-- <li>는 리스트 항목 하나.-->
        <a class=dropheader href="#">SHOP
          <span class="arrow">&#709;</span>
        </a> <!--드롭다운 메뉴 제목-->
        <ul class="submenu"> <!--서브메뉴-->
         <li><a  href ="/shop-all">ALL</a></li>
          <li><a  href ="/shop/plate">접시</a></li>
          <li><a   href ="/shop/bowl">볼</a></li>
          <li><a   href ="/shop/cup">컵</a></li>
          <li><a   href ="/shop/N">기타 제품</a></li>
        
         </ul>
        </li>

        <li class="dropMobile">  <!-- 드롭다운 메뉴 항목을 만듬.-->
        <a class=dropheader href="#">FAQ/QNA
          <span class="arrow">&#709;</span>
        </a><!-- 드롭다운 제목-->
        <ul class="submenu"><!--하위 메뉴들을 감싸는 리스트.-->
          <li><a href ="/question">자주 묻는 질문</a></li>
          <li><a href ="/QNA">Q&A</a></li><!--하위 메뉴 항목-->
        </ul>
        </li>
        </ul>







         </nav>
        
<div class="logo" style="cursor: pointer;"> 
        <a href="/">  YOLO
     </a></div>
      <nav class="nav-center">
      <ul class="menu"> <!--메뉴 항목들(가로 메뉴, 드롭다운 등을 감싸는 태그)-->
          <li class="dropdown">  <!--드롭다운 메뉴-->
            <a class="about" href="#">ABOUT</a> <!--드롭다운 메뉴 제목-->
            <ul class="dropdown-menu">  <!--서브 메뉴--> 
              <li><a  class="about" href ="/about-as">About us</a></li>
              <li><a  class="about" href ="/store">Store</a></li>
              <li><a  class="about" href ="/contact">Contact us</a></li>
              </ul>
              </li>
           
             <li> <a class="about" href="/notice">NOTICE</a> </li>
               <!-- 단일 메뉴-->

        <li class="dropdown">  <!--드롭다운 메뉴--> <!-- <li>는 리스트 항목 하나.-->
        <a class="about" href="#">SHOP</a> <!--드롭다운 메뉴 제목-->
        <ul class="dropdown-menu"> <!--서브메뉴-->
          <li><a  class="about" href ="shop-all">ALL</a></li>
          <li><a  class="about" href ="/shop/plate">접시</a></li>
          <li><a  class="about" href ="/shop/bowl">볼</a></li>
          <li><a  class="about" href ="/shop/cup">컵</a></li>
          <li><a  class="about" href ="/shop/N">기타 제품</a></li>
        
         </ul>
        </li>

        <li class="dropdown">  <!-- 드롭다운 메뉴 항목을 만듬.-->
        <a class="about" href="#">FAQ/QNA</a><!-- 드롭다운 제목-->
        <ul class="dropdown-menu"><!--하위 메뉴들을 감싸는 리스트.-->
          <li><a  class="about" href ="/question">자주 묻는 질문</a></li>
          <li><a  class="about" href ="/QNA">Q&A</a></li><!--하위 메뉴 항목-->
        </ul>
        </li>
        </ul>
      </nav>

         <div class="nav-right">
         <!--로그인,장바구니-->
             
           <button type="button" id="searchToggle" class="search-btn" onclick="toggleSearch(event)">
            ⌕  </button>
<input  type="text"
        class="search-input"
        id="searchInput"
        placeholder=" " />
            <!-- 토글로 나타날 검색 입력창 -->


             
           <div id="login-menu">
  <a class="auth" href="/login">Login</a>
</div>

<% if (!user) { %>
  <!-- 로그인 안 했을 때만 Join 보이기 -->
  <a class="auth join-link" href="/signup">Join</a>
<% } %>

<a class="auth" href="/cart">Cart</a>

      </ul>
        </header>





 <span class="insta">
          <a href="https://instagram.com/yol_o.0?igsh=MWd0OHlya3ZwcW5vbw=="
         target="_blank">
         <img src="./insta.png" alt="instagram"
         style="width: 25px; height: 25px;"></a>
          </span>
        </a>

          <section class="footer">
          <span class="final">
            <a href="/policy" style="text-decoration: none; color:inherit;">
            이용약관</a>&nbsp;  
            
             <a href="/privacy" style="text-decoration: none; color:inherit;">
            개인정보처리방침</a>&nbsp; 
            
            <!-- ✅ 사업자정보 확인 팝업 링크 -->
    <a href="https://www.ftc.go.kr/bizCommPop.do?wrkr_no=7023001816"
    onclick="window.open(this.href, 'bizInfo', 'width=800,height=700'); return false;"
    style="text-decoration: none; color: inherit;">사업자정보확인</a>&nbsp;
          </span>
          <br>
          <br>
          <span class="final2">
            상호: 욜로도예공방 | 대표: 정윤재 | 개인정보관리책임자: 정윤재 | 전화: 0507-1357-6521 | 이메일: yolo_2024@naver.com
          </span>
          <div class="final2">
            주소: 서울 강동구 천중로 53길 21 지하 1층 무궁화 놀이터 맞은편 건물 | 사업자등록번호:  702-30-01816 | 통신판매:  | 호스팅제공자: (주)가비아
          </div>
          <br>
          <br>
          <div class="final2">
            Copyright 2024. YOLO All rights reserved.
          </div>
          <br>
          <br>
           
        </div>
         </section>
          

<script>

    document.querySelectorAll('.dropheader').forEach(header => { header.addEventListener('click' ,
      () => {
         const parent = header.parentElement;

         parent.classList.toggle('open');
      });
    });

 function toggleMenu() {
     const nav = document.getElementById('navMenu');
     const openBtn = document.querySelector('.menu-toggle');
     const closeBtn = document.querySelector('.close-toggle');
     const icons= document.querySelector('.header-icons');

     
    
     nav.classList.toggle('active');
    
     const isOpen =nav.classList.contains('active');
   

if(isOpen) {
     openBtn.classList.add('hidden');
     closeBtn.classList.remove('hidden');
     icons.classList.add('hidden'); // toggle시 오른쪽 상단메뉴 제거

   document.body.classList.add('no-scroll');
     document.documentElement.classList.add('no-scroll');
    }
     //html 태그도 막기
     else{
 openBtn.classList.remove('hidden');
 closeBtn.classList.add('hidden');
   icons.classList.remove('hidden'); // toggle시 오른쪽 상단메뉴 삽입
    document.body.classList.remove('no-scroll');
    document.documentElement.classList.remove('no-scroll');
     // 토글 나갈시 다시 세로 스크롤 생김
  }

 }



 function toggleSearch(event) {
 
     if(event)event.preventDefault();  //submit 동작을 방지



   const input = document.querySelector('.search-input');
    const authLinks = document.querySelectorAll('.auth');
    // querySelectorAll()은  NodeList(배열 비슷한 객체)를 반환하니까 ,
    // classList.toggle()은 직접 쓸 수 없음 
    // forEach 나 for문으로 (반복문으로) 처리해야 함. 
 

  input.classList.toggle('active'); 
  input.focus(); // 돋보기를 누르면 커서 깜빡임
      
     authLinks.forEach(el => {
           
      el.classList.toggle('hidden'); //각각에 hidden 토글 적용

     });
 }
 
 
/* ✅ 두 번째로 선언해 버렸던 toggleSearch() 삭제 후 아래 하나만 남깁니다 */
function toggleSearch(e){
  if(e) e.preventDefault();          // form submit 방지

  const input      = document.getElementById('searchInput');
  const authLinks  = document.querySelectorAll('.auth');

  // 입력창 열고/닫기
  input.classList.toggle('show');

  // Login / Cart 토글
  authLinks.forEach(a => a.classList.toggle('hidden'));

  if (input.classList.contains('show')) {
    input.focus();
  } else {
    input.value = '';                // 닫힐 때 내용 비우기(선택)
  }
}

/* Enter 키로 검색 페이지 이동 */
document.getElementById('searchInput').addEventListener('keydown', e => {
  if (e.key === 'Enter'){
    const keyword = e.target.value.trim();
    if (!keyword){
      alert('검색어를 입력하세요');
      return;
    }
    location.href = `/search?keyword=${encodeURIComponent(keyword)}`;
  }
});

document.getElementById('mobileSearchIcon').addEventListener('click', e => {
  const overlay = document.getElementById('mobileSearchOverlay');
  overlay.classList.add('active');
  document.getElementById('searchInputOverlay').focus();
});

document.getElementById('searchInputOverlay').addEventListener('keydown', e => {
  if (e.key === 'Enter') {
    const keyword = e.target.value.trim();
    if (!keyword) {
      alert('검색어를 입력하세요');
      return;
    }
    location.href = `/search?keyword=${encodeURIComponent(keyword)}`;
  }
});


// 모바일 메뉴 검색창: Enter로 검색 페이지 이동
document.getElementById('search-mobile').addEventListener('keydown', e => {
  if (e.key === 'Enter') {
    const keyword = e.target.value.trim();
    if (!keyword) {
      alert('검색어를 입력하세요');
      return;
    }
    location.href = `/search?keyword=${encodeURIComponent(keyword)}`;
  }
});





document.getElementById('searchCloseBtn').addEventListener('click', () => {
  const overlay = document.getElementById('mobileSearchOverlay');
  overlay.classList.remove('active'); // 또는 .classList.remove('active') → 네 CSS 기준에 맞춰
  document.getElementById('searchInputOverlay').value = '';
});






  //로그인유지

    fetch('/auth/status')
    .then(res => res.json())
    .then(data => {
      console.log('auth/status 응답:',data);
      const banner = document.querySelector('#login-menu');
      if (!banner) return;
     console.warn('배너가 없음');
      if (data.loggedIn) {
        banner.innerHTML = `
      
          <a href="/mypage"class="auth">My page</a>

        `;
      }
    });
fetch('/auth/status')
    .then(res => res.json())
    .then(data => {
      console.log('auth/status 응답:',data);
      const banner = document.querySelector('#logintoggle');
      if (!banner) return;
     console.warn('배너가 없음');
      if (data.loggedIn) {
        banner.innerHTML = `
    
          <a href="/mypage"class="login-mobile">My page</a>
        `;
      }
    });

   fetch('/auth/status')
    .then(res => res.json())
    .then(data => {
      console.log('auth/status 응답:',data);
      const banner = document.querySelector('#logintoggle2');
      if (!banner) return;
     console.warn('배너가 없음');
      if (data.loggedIn) {
        banner.innerHTML = `
    
          <a href="/mypage"class="fa-solid fa-user"></a>
        `;
      }
    else{
      banner.innerHTML=` <a href="/login"class="fa-solid fa-user"></a>`;
    }

    });
</script>
<style>

.logo a{
  color: black !important;
  text-decoration: none !important;
  font-size: 30px !important;
}

  @media (max-width:768px) {
.logo a{
  color: black !important;
  text-decoration: none !important;
  font-size: 30px !important;
}
.header{
  padding:0.3rem 2rem;
}
.bg-img{
  padding-top:0;
}
.final{
   font-size: 9px;
   text-align: center;
   margin-top: 15px;

}
.final2{
    font-size: 9px;
    text-align: center;
   

}


  }
.product-card .hover-img {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.product-card:hover .hover-img {
  opacity: 1;
}

.product-card .default-img {
  transition: opacity 0.3s ease;
}

.product-card:hover .default-img {
  opacity: 0;
}
  














/* ① 부모 박스는 높이를 ‘명시’해서(비율) 사라지지 않게 */
.img-wrapper{
  position: relative;
  overflow: hidden;
  aspect-ratio: 1 / 1;          /* 정사각 아니면 4/5, 3/4 등 실제 썸네일 비율로 */
  --pos-x: 50%;
  --pos-y: 35%;                  /* ← 호버에서 보이던 위치값으로 맞추기 */
}

/* ② 두 이미지를 동일 좌표계/규칙으로 강제 */
.product-card .default-img,
.product-card .hover-img{
  position: absolute; inset: 0;  /* 같은 캔버스 */
  width: 100%; height: 100%;     /* object-fit이 실제로 동작하도록 */
  object-fit: cover !important;
  object-position: var(--pos-x) var(--pos-y) !important; /* ← 핵심 */
  display: block;
  margin: 0;
}

/* ③ 교체는 투명도로만 */
.product-card .hover-img{ opacity: 0; transition: opacity .3s ease; }
.product-card:hover .hover-img{ opacity: 1; }
.product-card .default-img{ transition: opacity .3s ease; }
.product-card:hover .default-img{ opacity: 0; }




/* 컨테이너: 줄 높이만 살짝 */
.product-card .product-price{
  display: inline-block;
  align-items: baseline;
  line-height: 1.2;
}




/* 정가(취소선) */
.product-card .product-price .price-original{
  color:#9aa0a6;
  text-decoration: line-through;
  font-size:.9em;
}

/* 할인가/퍼센트 */
.product-card .product-price .price-sale{ font-weight:600; color:#222; margin-left: 2px !important; }
.product-card .product-price .price-off{ font-weight:700; color:#c62828;  margin-left: 2px !important;}

/* 일반가 */
.product-card .product-price .price-normal{ font-weight:600; color:#222; }







  /* 헤더의 Join 링크에만 말풍선 표시 */
.header .nav-right .join-link{
  position: relative;          /* 말풍선 기준점 */
}

/* 말풍선 바디 */
.header .nav-right .join-link::after{
  content: "+1,000P";
  position: absolute;
  left: 50%;
  top: calc(100% + 6px);       /* 링크 아래로 6px 떨어뜨림 */
  transform: translateX(-50%);
  background: gray;        /* 말풍선 색 */
  color: #fff;
  font-size: 11px;
  font-weight: 600;
  line-height: 1;
  padding: 6px 10px;
  border-radius: 12px;
  white-space: nowrap;         /* 줄바꿈 방지 */
  pointer-events: none;        /* 클릭은 링크에만 */
}

/* 말풍선 꼬리 */
.header .nav-right .join-link::before{
  content: "";
  position: absolute;
  left: 50%;
  top: 100%;
  transform: translateX(-50%);
  border-width: 6px 6px 0 6px;           /* 삼각형 */
  border-style: solid;
  border-color: #5f6c85 transparent transparent transparent;
}

/* (선택) 모바일에선 숨기고 싶으면 */
@media (max-width: 768px){
  .header .nav-right .join-link::before,
  .header .nav-right .join-link::after{
    display: none;
  }
}


.nav-center{
  margin-left: 85px !important;
}

/* ① 목록 컨테이너: 반응형 그리드 */
.product-container{
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)); /* 카드 최소 280px, 남으면 늘림 */
  gap: 28px;                         /* 카드 사이 간격 */
  max-width: 1400px;                 /* 큰 화면에서 줄 길이 제한 (원하면 1200~1600 사이로 조정) */
  margin: 0 auto;                    /* 가운데 정렬 */
  padding: 0 24px;                   /* 좌우 여백 */
}

/* ② 카드 자체는 폭을 꽉 채우도록 */
.product-card{
  display: flex;
  flex-direction: column;
  min-width: 0;                      /* 그리드 안에서 내용 때문에 넘치지 않게 */
  width: 100%;
}

/* ③ 이미지 박스는 이미 비율 유지 중이라 그대로 두되, 부모 폭에 맞추기 */
.img-wrapper{ width: 100%; }

/* ④ 해상도 커질 때 카드 최소폭을 단계적으로 늘리기(선택) */
@media (min-width: 1200px){
  .product-container{
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  }
}
@media (min-width: 1600px){
  .product-container{
    grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));
    max-width: 1600px;               /* 아주 큰 화면에서 한 줄에 더 많이 */
  }
}

/* ⑤ 혹시 기존에 고정 폭이 있었다면 반드시 제거/무효화 */
.product-card,
.product-card img,
.product-info{
  max-width: 100%;
}




/* ========== 모바일 기본: 2열 고정 ========== */
.product-container{
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* 모바일 2열 유지 */
  gap: 16px;
  padding: 0 12px;
  max-width: 1400px;
  margin: 0 auto;
}

/* 아주 좁은 기기(<=360px)도 2열 유지하되 간격만 줄임 */
@media (max-width: 360px){
  .product-container{
    gap: 12px;
    padding: 0 8px;
  }
}

/* ========== 태블릿 이상부터 유동 그리드로 전환 ========== */
@media (min-width: 600px){
  .product-container{
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 20px;
    padding: 0 16px;
  }
}

@media (min-width: 900px){
  .product-container{
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 24px;
    padding: 0 20px;
  }
}

@media (min-width: 1200px){
  .product-container{
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 28px;
    padding: 0 24px;
  }
}

@media (min-width: 1600px){
  .product-container{
    grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));
    max-width: 1600px;
  }
}

/* 카드/이미지는 부모폭 꽉 채우기 */
.product-card{ display:flex; flex-direction:column; min-width:0; width:100%; }
.img-wrapper{ width:100%; }

/* 혹시 남아있는 고정폭 방지 */
.product-card,
.product-card img,
.product-info{ max-width:100%; }
</style>

</body>
</html>

